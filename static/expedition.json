{
    "openapi": "3.0.0",
    "info": {
        "title": "Expedition API",
        "description": "RESTful API for Expedition",
        "version": "1.0.0"
    },
    "paths": {
        "/api/v1/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "requestBody": {
                    "description": "Login to Exepdition",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "admin"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "paloalto"
                                    }
                                },
                                "required": ["username","password"]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },

        "/api/v1/apiKey": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "operationId": "App\\Http\\Controllers\\Auth\\UpdateUserController::getApiKey",
                "requestBody": {
                    "description": "Get user's api key",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "alovelace"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "somePWD"
                                    }
                                },
                                "required": ["username","password"]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/new/apiKey": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "operationId": "App\\Http\\Controllers\\Auth\\UpdateUserController::getNewApiKey",
                "requestBody": {
                    "description": "Regenerate your ApiKey",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "alovelace"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "somePWD"
                                    }
                                },
                                "required": ["username","password"]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/revoke/apiKey": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "operationId": "App\\Http\\Controllers\\Auth\\UpdateUserController::revokeApiKey",
                "requestBody": {
                    "description": "Revoke user's Api Key",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "alovelace"
                                    }
                                },
                                "required": ["username"]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },

        "/api/v1/projects": {
            "post": {
                "tags": [
                    "Projects"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "description": "Creates a new project in the database",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "project": {
                                        "type": "string",
                                        "description": "Name of the project where to load the config.",
                                        "example": "project1"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "devices": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "users": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "description": "Id from the user"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "description": "Role of the user",
                                                    "enum": ["admin","user","viewer"]
                                                }
                                            }
                                        }
                                    }
                                },
                                "required": ["project"]
                            },
                            "examples": {
                                "PROJECT": {
                                    "value": {
                                        "project": "project1",
                                        "description": "Project for testing"
                                    }
                                },
                                "PROJECT WITH USERS": {
                                    "value": {
                                        "project": "project1",
                                        "description": "Project for testing",
                                        "users": [
                                            {
                                                "id": 1,
                                                "role": "admin"
                                            },
                                            {
                                                "id": 2,
                                                "role": "viewer"
                                            }
                                        ]
                                    }
                                },
                                "PROJECT WITH DEVICES": {
                                    "value": {
                                        "project": "project1",
                                        "description": "Project for testing",
                                        "devices": [3,4,10]
                                    }
                                },
                                "PROJECT WITH USERS AND DEVICES": {
                                    "value": {
                                        "project": "project1",
                                        "description": "Project for testing",
                                        "devices": [3,4,10],
                                        "users": [
                                            {
                                                "id": 1,
                                                "role": "admin"
                                            },
                                            {
                                                "id": 2,
                                                "role": "viewer"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Projects"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "description": "Deletes a project from the database",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "array",
                                        "items": {
                                                "type": "integer",
                                                "description": "Ids of the projects to delete."
                                        },
                                        "example": [1,4,5]
                                    }
                                },
                                "required": ["id"]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "get": {
                "tags": [
                    "Projects"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },

        "/api/v1/projects/{projectId}/upload": {
            "post": {
                "tags": [
                    "Projects"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    }
                ],
                "requestBody": {
                    "description": "Upload configuration files",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "config_name": {
                                        "type": "string"
                                    },
                                    "vendor": {
                                        "type": "string",
                                        "enum": ["cp","ciscoasa"]
                                    },
                                    "config":{
                                        "type": "string",
                                        "format": "binary",
                                        "description": "Configuration file"
                                    },
                                    "zip":{
                                        "type": "string",
                                        "format": "binary",
                                        "description": "Zip file with all the configurations of a vendor"
                                    },
                                    "objects":{
                                        "type": "string",
                                        "format": "binary",
                                        "description": "Objects file from configuration"
                                    },
                                    "rulebase":{
                                        "type": "string",
                                        "format": "binary",
                                        "description": "Rulebase file from configuration"
                                    },
                                    "routes":{
                                        "type": "string",
                                        "format": "binary",
                                        "description": "Routes file from configuration"
                                    },
                                    "policy":{
                                        "type": "string",
                                        "format": "binary",
                                        "description": "Policies file from configuration"
                                    },
                                    "tgz":{
                                        "type": "string",
                                        "format": "binary",
                                        "description": "Tgz file from checkpoint-r80 configuration"
                                    },
                                    "clipboard": {
                                        "type": "string",
                                        "description": "paste the configuration as string"
                                    }
                                },
                                "required": ["vendor"]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }

        },
        "/api/v1/external-tools/convert": {
            "post": {
                "tags": [
                    "Projects"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "description": "Convert a configuration from other vendors to Palo Alto using Expedition-Converter",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "folder": {
                                        "type": "string",
                                        "description": "Path of the folder where the configuration files are located. The folder can only contain the file/s needed for an import",
                                        "example": "/var/www/html/expedition-api/contents/configSamples/CiscoConfig/"
                                    },
                                    "out": {
                                        "type": "string",
                                        "description": "Path where to locate the converted configuration.",
                                        "example": "/var/www/html/expedition-api/contents/configSamples/converted.xml"
                                    },
                                    "vendor": {
                                        "type": "string",
                                        "description": "Name of vendor you want to convert the configuration from.",
                                        "example": "ciscoasa"
                                    }
                                },
                                "required": ["file","out","vendor"]
                            },
                            "examples": {
                                "Convert Cisco ASA": {
                                    "value": {
                                        "file": "/var/www/html/expedition-api/contents/configSamples/CiscoConfig/",
                                        "out": "/var/www/html/expedition-api/contents/configSamples/converted.xml",
                                        "vendor": "ciscoasa"
                                    }
                                },
                                "Convert Fortinet": {
                                    "value": {
                                        "file": "/var/www/html/expedition-api/contents/configSamples/FortinetConfig/",
                                        "out": "/var/www/html/expedition-api/contents/configSamples/converted.xml",
                                        "vendor": "fortinet"
                                    }
                                },
                                "Convert CheckPoint < R80": {
                                    "value": {
                                        "file": "/var/www/html/expedition-api/contents/configSamples/CheckPointConfig/",
                                        "out": "/var/www/html/expedition-api/contents/configSamples/converted.xml",
                                        "vendor": "cp"
                                    },
                                    "description": "The folder must contain all needed files."
                                },
                                "Convert CheckPoint >= R80": {
                                    "value": {
                                        "file": "/var/www/html/expedition-api/contents/configSamples/CheckPointFiles/",
                                        "out": "/var/www/html/expedition-api/contents/configSamples/converted.xml",
                                        "vendor": "cp-r80"
                                    },
                                    "description":"The folder must contain the .tar.gz file from CheckPoint JAR extraction."
                                }

                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/projects/{projectId}/import": {
            "post": {
                "tags": [
                    "Projects"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "requestBody": {
                    "description": "Import a Palo Alto configuration into a project.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "config": {
                                        "type": "string",
                                        "description": "Path where the config is located.",
                                        "example": "/var/www/html/expedition-api/contents/configSamples/config.xml"
                                    }
                                },
                                "required": ["config"]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/projects/{projectId}/export": {
            "post": {
                "tags": [
                    "Projects"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "requestBody": {
                    "description": "Export a Palo Alto configuration into a project.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "out": {
                                        "type": "string",
                                        "description": "Path where the output config will be located.",
                                        "example": "/var/www/html/expedition-api/contents/configSamples/newConfig.xml"
                                    },
                                    "sourceId": {
                                        "type": "integer",
                                        "description": "Id of the source to export"
                                    }
                                },
                                "required": ["config", "sourceId"]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },

        "/api/v1/{projectId}/addUser": {
            "post": {
                "tags": [
                    "Projects"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "requestBody": {
                    "description": "Add a user with it's role in a project.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "description": "Id of the user."
                                    },
                                    "role": {
                                        "type": "string",
                                        "description": "Role given to the user in the project.",
                                        "example": "admin"
                                    }
                                },
                                "required": ["id", "role"]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/deleteUser": {
            "delete": {
                "tags": [
                    "Projects"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "requestBody": {
                    "description": "Add a user with it's role in a project.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "description": "Id of the user."
                                    },
                                    "role": {
                                        "type": "string",
                                        "description": "Role given to the user in the project.",
                                        "example": "admin"
                                    }
                                },
                                "required": ["id", "role"]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/updateUserRole": {
            "put": {
                "tags": [
                    "Projects"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "requestBody": {
                    "description": "Export the configuration as am xml file with all the changes made.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "description": "Id of the user."
                                    },
                                    "role": {
                                        "type": "string",
                                        "description": "Role given to the user in the project.",
                                        "example": "admin"
                                    }
                                },
                                "required": ["id", "role"]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/users/{username}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "name": "username"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "description": "Register a new user.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "description": "First name of the user.",
                                        "example": "Ada"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "description": "Last name of the user.",
                                        "example": "Lovelace"
                                    },
                                    "account_name": {
                                        "type": "string",
                                        "description": "Username used in the application.",
                                        "example": "alovelace"
                                    },
                                    "timezone": {
                                        "type": "string",
                                        "description": "Timezone where user is located.",
                                        "example": "Europe/Amsterdam"
                                    },
                                    "server_type": {
                                        "type": "string",
                                        "description": "Type of server (local,radius,ldap).",
                                        "example": "ldap"
                                    },
                                    "server_name": {
                                        "type": "string",
                                        "description": "Name of the server if it's not local",
                                        "example": "ldap_server"
                                    },
                                    "password": {
                                        "type": "string",
                                        "description": "Password for the user to access Expedition.",
                                        "example": ""
                                    },
                                    "password_confirm": {
                                        "type": "string",
                                        "description": "Confirmation of the previous password.",
                                        "example": ""
                                    },
                                    "role": {
                                        "type": "string",
                                        "description": "Role fiven to the user",
                                        "example": "admin"
                                    }
                                },
                                "required": ["first_name", "last_name", "account_name", "timezone","server_type","password","password_confirm","role"]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "description": "Register a new user.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "description": "id from the user"
                                    },
                                    "first_name": {
                                        "type": "string",
                                        "description": "First name of the user.",
                                        "example": "Ada"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "description": "Last name of the user.",
                                        "example": "Lovelace"
                                    },
                                    "username": {
                                        "type": "string",
                                        "description": "Username used in the application.",
                                        "example": "alovelace"
                                    },
                                    "timezone": {
                                        "type": "string",
                                        "description": "Timezone where user is located.",
                                        "example": "Europe/Amsterdam"
                                    },
                                    "server_type": {
                                        "type": "string",
                                        "description": "Type of server (local,radius,ldap).",
                                        "example": "ldap"
                                    },
                                    "server_name": {
                                        "type": "string",
                                        "description": "Name of the server if it's not local",
                                        "example": "ldap_server"
                                    },
                                    "role": {
                                        "type": "string",
                                        "description": "Role fiven to the user",
                                        "example": "admin"
                                    }
                                },
                                "required": ["id", "server_type"]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "description": "Delete an existing user.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "description": "Id from the user."
                                    }
                                },
                                "required": ["id"]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/user/changePassword": {
            "post": {
                "tags": [
                    "Users"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "description": "Register a new user.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "description": "Username used in the application.",
                                        "example": "alovelace"
                                    },
                                    "password": {
                                        "type": "string",
                                        "description": "Password for the user to access Expedition.",
                                        "example": ""
                                    },
                                    "password_confirm": {
                                        "type": "string",
                                        "description": "Confirmation of the previous password.",
                                        "example": ""
                                    }
                                },
                                "required": ["username", "password", "password_confirm"]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },

        "/api/v1/{projectId}/sources": {
            "get": {
                "tags": ["Source"],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    }
                ],
                "description": "Returns all sources from a project",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\SourceInterface::getSources",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },

        "/api/v1/{projectId}/vsyses": {
            "get": {
                "tags": ["Virtual Systems"],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    },
                    {
                        "in": "query",
                        "name": "source",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Source id where object is stored"
                    }
                ],
                "description": "Returns all virtual systems from a project",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\VsysInterface::getVsyses",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/deviceGroups": {
            "get": {
                "tags": ["Device Groups"],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    },
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    }
                ],
                "description": "Returns all device groups from a project",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\DeviceGroupInterface::getDeviceGroups",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/templates": {
            "get": {
                "tags": ["Template"],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    },
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    }
                ],
                "description": "Returns all templates from a project",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\TemplateInterface::getTemplates",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/templateStacks": {
            "get": {
                "tags": ["Template Stacks"],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    },
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    }
                ],
                "description": "Returns all template stacks from a project",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\TemplateStackInterface::getTemplateStacks",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },

        "/api/v1/{projectId}/objects/addresses/{limit}": {
            "get": {
                "tags": [
                    "Addresses"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    },
                    {
                        "in": "path",
            "name": "limit",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Number of objects to show (can be 'all')"
                    }
                ],
                "description": "Returns all addresses",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ObjectInterfaces\\AddressInterface::getAddresses",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/objects/addresses": {
            "post": {
                "tags": [
                    "Addresses"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Insert an address",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ObjectInterfaces\\AddressInterface::addAddresses",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items":{
                                    "type": "object",
                                    "properties": {
                                        "uuid": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "checkit": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "dummy": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "invalid": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "override": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "source": {
                                            "type": "string",
                                            "example": "config.xml"
                                        },
                                        "vsys": {
                                            "type": "string",
                                            "example": "vsys1"
                                        },
                                        "type": {
                                            "type": "integer",
                                            "enum": [1,2,3,4],
                                            "description": "1=ip-netmask; 2=ip-range; 3=fqdn; 4=dynamic"
                                        },
                                        "ipaddress": {
                                            "type": "string"
                                        },
                                        "netmask": {
                                            "type": "string"
                                        },
                                        "ip_type": {
                                            "type": "integer",
                                            "enum": [1,2,3],
                                            "description": "1=ipv4; 2=ipv6; 3=fqdn"
                                        },
                                        "tags": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "required": ["name","vsys","source","type","ipaddress", "ip_type"]
                                }
                            },
                            "examples": {
                                "IP-NETMASK": {
                                    "value": [{
                                        "name": "address1",
                                        "descripion": "ipv4 ip-netmask addresss",
                                        "ipaddress": "1.2.3.4",
                                        "ip_type": 1,
                                        "type": 1,
                                        "tags": ["Trust", "infraestructure"],
                                        "vsys": "vsys1",
                                        "source": "config.xml"
                                    }]
                                },
                                "FQDN": {
                                    "value": [{
                                        "name": "address2",
                                        "descripion": "fqdn addresss",
                                        "ipaddress": "google.com",
                                        "ip_type": 3,
                                        "type": 4,
                                        "vsys": "vsys1",
                                        "source": "config.xml"
                                    }]
                                },
                                "IP-RANGE": {
                                    "value": [{
                                        "name": "address3",
                                        "descripion": "ipv4 ip-range addresss",
                                        "ipaddress": "1.1.1.1-1.1.1.10",
                                        "ip_type": 1,
                                        "type": 2,
                                        "tags": ["Trust"],
                                        "vsys": "vsys1",
                                        "source": "config.xml"
                                    }]
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "put": {
                "tags": [
                    "Addresses"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Updates an address params",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ObjectInterfaces\\AddressInterface::updateAddresses",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/updateSchema"
                                }]
                            },
                            "examples": {
                                "UPDATE IPADDRESS": {
                                    "value": {
                                        "expedition-id": ["30", "31"],
                                        "params": {
                                            "ipaddress": "1.1.1.3"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses":{
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Addresses"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Deletes an address",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ObjectInterfaces\\AddressInterface::deleteAddresses",
                "requestBody": {
                    "description": "Address id to delete",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/deleteSchema"
                                }]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/objects/addressGroups/{limit}": {
            "get": {
                "tags": [
                    "Address Groups"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    },
                    {
                        "in": "path",
            "name": "limit",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Number of objects to show (can be 'all')"
                    }
                ],
                "description": "Returns all address groups",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ObjectInterfaces\\AddressGroupInterface::getAddressGroups",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/objects/addressGroups": {
            "post": {
                "tags": [
                    "Address Groups"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Insert an Address Group",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ObjectInterfaces\\AddressGroupInterface::addAddressGroups",
                "requestBody": {
                    "description": "The Address Group you want to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "uuid": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "checkit": {
                                        "type": "integer",
                                        "enum": [0,1],
                                        "default": 0
                                    },
                                    "dummy": {
                                        "type": "integer",
                                        "enum": [0,1],
                                        "default": 0
                                    },
                                    "invalid": {
                                        "type": "integer",
                                        "enum": [0,1],
                                        "default": 0
                                    },
                                    "override": {
                                        "type": "integer",
                                        "enum": [0,1],
                                        "default": 0
                                    },
                                    "source": {
                                        "type": "string",
                                        "example": "config.xml"
                                    },
                                    "vsys": {
                                        "type": "string",
                                        "example": "vsys1"
                                    },
                                    "type": {
                                        "type": "integer",
                                        "enum": [1,2],
                                        "description": "1=static, 2=dynamic"
                                    },
                                    "filter": {
                                        "type": "string"
                                    },
                                    "tags": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "members": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": ["name","vsys","source","type"],
                                "type": "object"
                            },
                            "examples": {
                                "STATIC": {
                                    "value": [{
                                        "name": "addrGroup1",
                                        "description": "Static address group",
                                        "type": 1,
                                        "members": ["address1", "address2"],
                                        "vsys": "vsys1",
                                        "source": "config.xml"
                                    }]
                                },
                                "DYNAMIC": {
                                    "value": [{
                                        "name": "addrGroup2",
                                        "description": "Dynamic address group",
                                        "filter": " 'Lab' or 'Panw' or 'Known-Bad' or 'GP' ",
                                        "type": 2,
                                        "tags": ["Trust", "Lab"],
                                        "vsys": "vsys1",
                                        "source": "config.xml"
                                    }]
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "put": {
                "tags": [
                    "Address Groups"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Updates an Address Group params",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ObjectInterfaces\\AddressGroupInterface::updateAddressGroups",
                "requestBody": {
                    "description": "Address Group params to update",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/updateSchema"
                                }]

                            },
                            "examples": {
                                "UPDATE MEMBERS": {
                                    "value": {
                                        "expedition-id": 31,
                                        "params": {
                                            "add": {
                                                "members": ["address1", "address2"]
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Address Groups"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Deletes an Address Group",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ObjectInterfaces\\AddressGroupInterface::deleteAddressGroups",
                "requestBody": {
                    "description": "Address Group  id to delete",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/deleteSchema"
                                }]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/objects/applications/{limit}": {
            "get": {
                "tags": [
                    "Applications"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    },
                    {
                        "in": "path",
            "name": "limit",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Number of objects to show (can be 'all')"
                    }
                ],
                "description": "Returns all applications",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ObjectInterfaces\\ApplicationInterface::getApplications",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/objects/applications": {
            "post": {
                "tags": [
                    "Applications"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Insert an application",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ObjectInterfaces\\ApplicationInterface::addApplications",
                "requestBody": {
                    "description": "The application you want to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "uuid": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "checkit": {
                                        "type": "integer",
                                        "enum": [0,1],
                                        "default": 0
                                    },
                                    "dummy": {
                                        "type": "integer",
                                        "enum": [0,1],
                                        "default": 0
                                    },
                                    "invalid": {
                                        "type": "integer",
                                        "enum": [0,1],
                                        "default": 0
                                    },
                                    "override": {
                                        "type": "integer",
                                        "enum": [0,1],
                                        "default": 0
                                    },
                                    "source": {
                                        "type": "string",
                                        "example": "config.xml"
                                    },
                                    "vsys": {
                                        "type": "string",
                                        "example": "vsys1"
                                    },
                                    "type": {
                                        "type": "integer"
                                    },
                                    "parent_app": {
                                        "type": "string"
                                    },
                                    "evasive_behaviour": {
                                        "type": "boolean"
                                    },
                                    "consume_big_bandwidth": {
                                        "type": "boolean"
                                    },
                                    "prone_to_misuse": {
                                        "type": "boolean"
                                    },
                                    "able_to_transfer_file": {
                                        "type": "boolean"
                                    },
                                    "tunnel_other_application": {
                                        "type": "boolean"
                                    },
                                    "used_by_malware": {
                                        "type": "boolean"
                                    },
                                    "has_known_vulnerability": {
                                        "type": "boolean"
                                    },
                                    "pervasive_use": {
                                        "type": "boolean"
                                    },
                                    "tunnel_applications": {
                                        "type": "boolean"
                                    },
                                    "file_type_ident": {
                                        "type": "boolean"
                                    },
                                    "virus_ident": {
                                        "type": "boolean"
                                    },
                                    "data_ident": {
                                        "type": "boolean"
                                    },
                                    "default_type": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    },
                                    "code": {
                                        "type": "integer"
                                    },
                                    "timeout": {
                                        "type": "string"
                                    },
                                    "tcp_timeout": {
                                        "type": "string"
                                    },
                                    "tcp_half_closed_timeout": {
                                        "type": "string"
                                    },
                                    "tcp_time_wait_timeout": {
                                        "type": "string"
                                    },
                                    "udp_timeout": {
                                        "type": "string"
                                    },
                                    "spyware_ident": {
                                        "type": "boolean"
                                    },
                                    "vtype": {
                                        "type": "string"
                                    },
                                    "alg_disable_capability": {
                                        "type": "string"
                                    },
                                    "no_appid_caching": {
                                        "type": "boolean"
                                    },
                                    "category": {
                                        "type": "string"
                                    },
                                    "subcategory": {
                                        "type": "string"
                                    },
                                    "technology": {
                                        "type": "string"
                                    },
                                    "risk": {
                                        "type": "string"
                                    },
                                    "tags": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object",
                                "required": ["name","vsys","source","default_type","category","subcategory","technology"]
                            },
                            "examples": {
                                "DEFAULT PORT": {
                                    "value": [
                                        {
                                            "name": "port-application",
                                            "descripion": "application with default type: port",
                                            "category": "media",
                                            "subcategory": "gaming",
                                            "technology": "client-server",
                                            "parent_app": "None",
                                            "risk": 1,
                                            "evasive_behavior": false,
                                            "consume_big_bandwidth": false,
                                            "prone_to_misuse": false,
                                            "able_to_transfer_file": false,
                                            "tunnel_other_application": false,
                                            "used_by_malware": false,
                                            "has_known_vulnerability": false,
                                            "pervasive_use": false,
                                            "tunnel_applications": false,
                                            "default_type": "port",
                                            "value": "tcp/443,tcp/80",
                                            "timeout": "3600",
                                            "tcp_timeout": "3600",
                                            "tcp_half_closed_timeout": "120",
                                            "tcp_timewait_timeout": "15",
                                            "udp_timeout": "0",
                                            "file_type_ident": false,
                                            "data_ident": false,
                                            "virus_ident": false,
                                            "vsys": "vsys1",
                                            "source": "config.xml"
                                        }
                                    ]
                                },
                                "DEFAULT IP-PROTOCOL": {
                                    "value": [
                                        {
                                            "name": "ip-protocol-application",
                                            "descripion": "application with default type: ip-protocol",
                                            "category": "media",
                                            "subcategory": "gaming",
                                            "technology": "client-server",
                                            "parent_app": "None",
                                            "risk": 1,
                                            "evasive_behavior": false,
                                            "consume_big_bandwidth": false,
                                            "prone_to_misuse": false,
                                            "able_to_transfer_file": false,
                                            "tunnel_other_application": false,
                                            "used_by_malware": false,
                                            "has_known_vulnerability": false,
                                            "pervasive_use": false,
                                            "tunnel_applications": false,
                                            "default_type": "ident-by-ip-protocol",
                                            "value": "30",
                                            "timeout": "3600",
                                            "tcp_timeout": "3600",
                                            "tcp_half_closed_timeout": "120",
                                            "tcp_timewait_timeout": "15",
                                            "udp_timeout": "0",
                                            "file_type_ident": false,
                                            "data_ident": false,
                                            "virus_ident": false,
                                            "vsys": "vsys1",
                                            "source": "config.xml"
                                        }
                                    ]
                                },
                                "DEFAULT ICMP-TYPE": {
                                    "value": [
                                        {
                                            "name": "icmp-type-application",
                                            "descripion": "application with default type: icmp",
                                            "category": "media",
                                            "subcategory": "gaming",
                                            "technology": "client-server",
                                            "parent_app": "None",
                                            "risk": 1,
                                            "evasive_behavior": false,
                                            "consume_big_bandwidth": false,
                                            "prone_to_misuse": false,
                                            "able_to_transfer_file": false,
                                            "tunnel_other_application": false,
                                            "used_by_malware": false,
                                            "has_known_vulnerability": false,
                                            "pervasive_use": false,
                                            "tunnel_applications": false,
                                            "default_type": "ident-by-icmp-type",
                                            "type": 30,
                                            "code": 2,
                                            "timeout": "3600",
                                            "tcp_timeout": "3600",
                                            "tcp_half_closed_timeout": "120",
                                            "tcp_timewait_timeout": "15",
                                            "udp_timeout": "0",
                                            "file_type_ident": false,
                                            "data_ident": false,
                                            "virus_ident": false,
                                            "vsys": "vsys1",
                                            "source": "config.xml"
                                        }
                                    ]
                                },
                                "DEFAULT ICMP6-TYPE": {
                                    "value": [
                                        {
                                            "name": "icmp6-type-application",
                                            "descripion": "application with default type: icmp6",
                                            "category": "media",
                                            "subcategory": "gaming",
                                            "technology": "client-server",
                                            "parent_app": "None",
                                            "risk": 1,
                                            "evasive_behavior": false,
                                            "consume_big_bandwidth": false,
                                            "prone_to_misuse": false,
                                            "able_to_transfer_file": false,
                                            "tunnel_other_application": false,
                                            "used_by_malware": false,
                                            "has_known_vulnerability": false,
                                            "pervasive_use": false,
                                            "tunnel_applications": false,
                                            "default_type": "ident-by-icmp6-type",
                                            "type": 30,
                                            "code": 2,
                                            "timeout": "3600",
                                            "tcp_timeout": "3600",
                                            "tcp_half_closed_timeout": "120",
                                            "tcp_timewait_timeout": "15",
                                            "udp_timeout": "0",
                                            "file_type_ident": false,
                                            "data_ident": false,
                                            "virus_ident": false,
                                            "vsys": "vsys1",
                                            "source": "config.xml"
                                        }
                                    ]
                                },
                                "DEFAULT NONE": {
                                    "value": [
                                        {
                                            "name": "none-type-application",
                                            "descripion": "application with default type: none",
                                            "category": "media",
                                            "subcategory": "gaming",
                                            "technology": "client-server",
                                            "parent_app": "None",
                                            "risk": 1,
                                            "evasive_behavior": false,
                                            "consume_big_bandwidth": false,
                                            "prone_to_misuse": false,
                                            "able_to_transfer_file": false,
                                            "tunnel_other_application": false,
                                            "used_by_malware": false,
                                            "has_known_vulnerability": false,
                                            "pervasive_use": false,
                                            "tunnel_applications": false,
                                            "default_type": "None",
                                            "timeout": "3600",
                                            "tcp_timeout": "3600",
                                            "tcp_half_closed_timeout": "120",
                                            "tcp_timewait_timeout": "15",
                                            "udp_timeout": "0",
                                            "file_type_ident": false,
                                            "data_ident": false,
                                            "virus_ident": false,
                                            "vsys": "vsys1",
                                            "source": "config.xml"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },

                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "put": {
                "tags": [
                    "Applications"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Updates an application params",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ObjectInterfaces\\ApplicationInterface::updateApplications",
                "requestBody": {
                    "description": "Application params to update",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/updateSchema"
                                }]
                            }
                        }
                    }
                },
                "responses":{
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Applications"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Deletes an application",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ObjectInterfaces\\ApplicationInterface::deleteApplications",
                "requestBody": {
                    "description": "Application id to delete",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/deleteSchema"
                                }]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/objects/applicationFilters/{limit}": {
            "get": {
                "tags": [
                    "Application Filters"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    },
                    {
                        "in": "path",
            "name": "limit",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Number of objects to show (can be 'all')"
                    }
                ],
                "description": "Returns all application filters",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ObjectInterfaces\\ApplicationFilterInterface::getApplicationFilters",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/objects/applicationFilters": {
            "post": {
                "tags": [
                    "Application Filters"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Insert an application filter",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ObjectInterfaces\\ApplicationFilterInterface::addApplicationFilters",
                "requestBody": {
                    "description": "The application filter you want to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "uuid": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "checkit": {
                                        "type": "integer",
                                        "enum": [0,1],
                                        "default": 0
                                    },
                                    "dummy": {
                                        "type": "integer",
                                        "enum": [0,1],
                                        "default": 0
                                    },
                                    "invalid": {
                                        "type": "integer",
                                        "enum": [0,1],
                                        "default": 0
                                    },
                                    "override": {
                                        "type": "integer",
                                        "enum": [0,1],
                                        "default": 0
                                    },
                                    "source": {
                                        "type": "string",
                                        "example": "config.xml"
                                    },
                                    "vsys": {
                                        "type": "string",
                                        "example": "vsys1"
                                    },
                                    "type": {
                                        "type": "string"
                                    },
                                    "evasive_behaviour": {
                                        "type": "boolean"
                                    },
                                    "consume_big_bandwidth": {
                                        "type": "boolean"
                                    },
                                    "prone_to_misuse": {
                                        "type": "boolean"
                                    },
                                    "able_to_transfer_file": {
                                        "type": "boolean"
                                    },
                                    "tunnel_other_application": {
                                        "type": "boolean"
                                    },
                                    "used_by_malware": {
                                        "type": "boolean"
                                    },
                                    "has_known_vulnerability": {
                                        "type": "boolean"
                                    },
                                    "pervasive_use": {
                                        "type": "boolean"
                                    },
                                    "saas_certifications": {
                                        "type": "boolean"
                                    },
                                    "saas_risk": {
                                        "type": "boolean"
                                    },

                                    "category": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "subcategory": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "technology": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "risk": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "tags": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": ["name","vsys","source"],
                                "type": "object"
                            },
                            "examples": {
                                "APPLICATION FILTER": {
                                    "value": [{
                                        "name": "applicationFilter",
                                        "description": "example of application filter",
                                        "checkit": 0,
                                        "dummy": 0,
                                        "invalid": 0,
                                        "override": 0,
                                        "source": "config.xml",
                                        "vsys": "vsys1",
                                        "evasive_behaviour": false,
                                        "consume_big_bandwidth": false,
                                        "prone_to_misuse": false,
                                        "able_to_transfer_file": false,
                                        "tunnel_other_application": false,
                                        "used_by_malware": false,
                                        "has_known_vulnerability": false,
                                        "pervasive_use": false,
                                        "category": [
                                            "collaboration"
                                        ],
                                        "subcategory": [
                                            "email"
                                        ],
                                        "technology": [
                                            "client-server"
                                        ],
                                        "risk": [
                                            1
                                        ]
                                    }]
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "put": {
                "tags": [
                    "Application Filters"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Updates an application filter params",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ObjectInterfaces\\ApplicationFilterInterface::updateApplicationFilters",
                "requestBody": {
                    "description": "Application filter params to update",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/updateSchema"
                                }]
                            }
                        }
                    }
                },
                "responses":{
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Application Filters"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Deletes an application filter",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ObjectInterfaces\\ApplicationFilterInterface::deleteApplicationFilters",
                "requestBody": {
                    "description": "Application filter id to delete",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/deleteSchema"
                                }]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/objects/applicationGroups/{limit}":{
            "get": {
                "tags": [
                    "Application Groups"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    },
                    {
                        "in": "path",
            "name": "limit",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Number of objects to show (can be 'all')"
                    }
                ],
                "description": "Returns all application groups",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ObjectInterfaces\\ApplicationGroupInterface::getApplicationGroups",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/objects/applicationGroups": {
            "post": {
                "tags": [
                    "Application Groups"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Insert an application group",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ObjectInterfaces\\ApplicationGroupInterface::addApplicationGroups",
                "requestBody": {
                    "description": "The application group you want to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "uuid": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "checkit": {
                                        "type": "integer",
                                        "enum": [0,1],
                                        "default": 0
                                    },
                                    "dummy": {
                                        "type": "integer",
                                        "enum": [0,1],
                                        "default": 0
                                    },
                                    "invalid": {
                                        "type": "integer",
                                        "enum": [0,1],
                                        "default": 0
                                    },
                                    "override": {
                                        "type": "integer",
                                        "enum": [0,1],
                                        "default": 0
                                    },
                                    "source": {
                                        "type": "string",
                                        "example": "config.xml"
                                    },
                                    "vsys": {
                                        "type": "string",
                                        "example": "vsys1"
                                    },
                                    "type": {
                                        "type": "string"
                                    },
                                    "filter": {
                                        "type": "string"
                                    },
                                    "members": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object",
                                "required": ["name","vsys","source","members"]
                            },
                            "examples": {
                                "APPLICATION GROUP": {
                                    "value": [{
                                        "name": "applicationGroup",
                                        "description": "example of application group",
                                        "members": ["port-application", "ip-port-application"],
                                        "vsys": "vsys1",
                                        "source": "config.xml"
                                    }]
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "put": {
                "tags": [
                    "Application Groups"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Updates an application group params",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ObjectInterfaces\\ApplicationGroupInterface::updateApplicationGroups",
                "requestBody": {
                    "description": "Application group params to update",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/updateSchema"
                                }]
                            }
                        }
                    }
                },
                "responses":{
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Application Groups"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Deletes an application group",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ObjectInterfaces\\ApplicationGroupInterface::deleteApplicationGroups",
                "requestBody": {
                    "description": "Application group id to delete",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/deleteSchema"
                                }]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/objects/services/{limit}":{
            "get": {
                "tags": [
                    "Services"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    },
                    {
                        "in": "path",
            "name": "limit",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Number of objects to show (can be 'all')"
                    }
                ],
                "description": "Returns all services",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ObjectInterfaces\\ServiceInterface::getServices",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/objects/services": {
            "post": {
                "tags": [
                    "Services"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Insert a service",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ObjectInterfaces\\ServiceInterface::addServices",
                "requestBody": {
                    "description": "The service you want to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "uuid": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "checkit": {
                                        "type": "integer",
                                        "enum": [0,1],
                                        "default": 0
                                    },
                                    "dummy": {
                                        "type": "integer",
                                        "enum": [0,1],
                                        "default": 0
                                    },
                                    "invalid": {
                                        "type": "integer",
                                        "enum": [0,1],
                                        "default": 0
                                    },
                                    "override": {
                                        "type": "integer",
                                        "enum": [0,1],
                                        "default": 0
                                    },
                                    "source": {
                                        "type": "string",
                                        "example": "config.xml"
                                    },
                                    "vsys": {
                                        "type": "string",
                                        "example": "vsys1"
                                    },
                                    "type": {
                                        "type": "integer"
                                    },
                                    "protocol": {
                                        "type": "string"
                                    },
                                    "sport": {
                                        "type": "integer"
                                    },
                                    "dport": {
                                        "type": "integer"
                                    },
                                    "halfclosed_timeout": {
                                        "type": "integer"
                                    },
                                    "halfwait_timeout": {
                                        "type": "integer"
                                    },
                                    "timeout": {
                                        "type": "integer"
                                    },
                                    "tags": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object",
                                "required": ["name","vsys","source","dport","protocol"]
                            },
                            "examples": {
                                "TCP SERVICE": {
                                    "value": [{
                                        "name": "tcp-service",
                                        "description": "service tcp",
                                        "dport": "55",
                                        "sport": "30-54",
                                        "protocol": "tcp",
                                        "timeout": "3600",
                                        "halfclosed_timeout": "120",
                                        "halfwait_timeout": "15",
                                        "vsys": "vsys1",
                                        "source": "config.xml"
                                    }]
                                },
                                "UDP SERVICE": {
                                    "value": [{
                                        "name": "udp-service",
                                        "description": "service udp",
                                        "dport": "55",
                                        "sport": "30-54",
                                        "protocol": "udp",
                                        "timeout": 30,
                                        "vsys": "vsys1",
                                        "source": "config.xml"
                                    }]
                                },
                                "SCTP SERVICE": {
                                    "value": [{
                                        "name": "sctp-service",
                                        "description": "service sctp",
                                        "dport": "55",
                                        "sport": "30-54",
                                        "protocol": "sctp",
                                        "vsys": "vsys1",
                                        "source": "config.xml"
                                    }]
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "put": {
                "tags": [
                    "Services"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Updates a service params",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ObjectInterfaces\\ServiceInterface::updateServices",
                "requestBody": {
                    "description": "Service params to update",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/updateSchema"
                                }]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Services"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Deletes a service",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ObjectInterfaces\\ServiceInterface::deleteServices",
                "requestBody": {
                    "description": "Service id to delete",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/deleteSchema"
                                }]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/objects/serviceGroups/{limit}":{
            "get": {
                "tags": [
                    "Service Groups"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    },
                    {
                        "in": "path",
            "name": "limit",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Number of objects to show (can be 'all')"
                    }
                ],
                "description": "Returns all service groups",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ObjectInterfaces\\ServiceGroupInterface::getServiceGroups",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/objects/serviceGroups": {
            "post": {
                "tags": [
                    "Service Groups"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Insert a service group",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ObjectInterfaces\\ServiceGroupInterface::addServiceGroups",
                "requestBody": {
                    "description": "The service you want to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "uuid": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "checkit": {
                                        "type": "integer",
                                        "enum": [0,1],
                                        "default": 0
                                    },
                                    "dummy": {
                                        "type": "integer",
                                        "enum": [0,1],
                                        "default": 0
                                    },
                                    "invalid": {
                                        "type": "integer",
                                        "enum": [0,1],
                                        "default": 0
                                    },
                                    "override": {
                                        "type": "integer",
                                        "enum": [0,1],
                                        "default": 0
                                    },
                                    "source": {
                                        "type": "string",
                                        "example": "config.xml"
                                    },
                                    "vsys": {
                                        "type": "string",
                                        "example": "vsys1"
                                    },
                                    "type": {
                                        "type": "integer"
                                    },
                                    "filter": {
                                        "type": "string"
                                    },
                                    "tags": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "members": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object",
                                "required": ["name","vsys","source","members"]
                            },
                            "examples": {
                                "SERVICE GROUP": {
                                    "value": [{
                                        "name": "serviceGroup",
                                        "description": "example of service group",
                                        "type": "static",
                                        "members": ["tcp-service", "service-http"],
                                        "vsys": "vsys1",
                                        "source": "config.xml"
                                    }]
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "put": {
                "tags": [
                    "Service Groups"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Updates a service group params",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ObjectInterfaces\\ServiceGroupInterface::updateServiceGroups",
                "requestBody": {
                    "description": "Service params to update",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/updateSchema"
                                }]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Service Groups"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Deletes a service group",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ObjectInterfaces\\ServiceGroupInterface::deleteServiceGroups",
                "requestBody": {
                    "description": "Service group id to delete",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/deleteSchema"
                                }]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/objects/tags/{limit}":{
            "get": {
                "tags": [
                    "Tags"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    },
                    {
                        "in": "path",
            "name": "limit",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Number of objects to show (can be 'all')"
                    }
                ],
                "description": "Returns all tags",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ObjectInterfaces\\TagInterface::getTags",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/objects/tags": {
            "post": {
                "tags": [
                    "Tags"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Insert a tag",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ObjectInterfaces\\TagInterface::addTags",
                "requestBody": {
                    "description": "The tag you want to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "uuid": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "checkit": {
                                        "type": "integer",
                                        "enum": [0,1],
                                        "default": 0
                                    },
                                    "dummy": {
                                        "type": "integer",
                                        "enum": [0,1],
                                        "default": 0
                                    },
                                    "invalid": {
                                        "type": "integer",
                                        "enum": [0,1],
                                        "default": 0
                                    },
                                    "override": {
                                        "type": "integer",
                                        "enum": [0,1],
                                        "default": 0
                                    },
                                    "source": {
                                        "type": "string",
                                        "example": "config.xml"
                                    },
                                    "vsys": {
                                        "type": "string",
                                        "example": "vsys1"
                                    },
                                    "type": {
                                        "type": "string"
                                    },
                                    "color": {
                                        "type": "string"
                                    },
                                    "comments": {
                                        "type": "string"
                                    }
                                },
                                "required": ["name","vsys","source"],
                                "type": "object"
                            },
                            "examples": {
                                "TAG": {
                                    "value": [{
                                        "name": "newTag",
                                        "color": "None",
                                        "vsys": "vsys1",
                                        "source": "config.xml"
                                    }]
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "put": {
                "tags": [
                    "Tags"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Updates a tag params",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ObjectInterfaces\\TagInterface::updateTags",
                "requestBody": {
                    "description": "Tag params to update",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/updateSchema"
                                }]
                            }
                        }
                    }
                },
                "responses":{
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Tags"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Deletes a tag",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ObjectInterfaces\\TagInterface::deleteTags",
                "requestBody": {
                    "description": "Tag id to delete",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/deleteSchema"
                                }]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/objects/regions/{limit}": {
            "get": {
                "tags": [
                    "Regions"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    },
                    {
                        "in": "path",
            "name": "limit",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Number of objects to show (can be 'all')"
                    }
                ],
                "description": "Returns all regions",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/objects/regions": {
            "get": {
                "tags": [
                    "Regions"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    }
                ],
                "description": "Returns all regions",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ObjectInterfaces\\RegionInterface::getRegions",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "post": {
                "tags": [
                    "Regions"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Insert a region",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ObjectInterfaces\\RegionInterface::addRegions",
                "requestBody": {
                    "description": "The region you want to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "uuid": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "checkit": {
                                        "type": "integer",
                                        "enum": [0,1],
                                        "default": 0
                                    },
                                    "dummy": {
                                        "type": "integer",
                                        "enum": [0,1],
                                        "default": 0
                                    },
                                    "invalid": {
                                        "type": "integer",
                                        "enum": [0,1],
                                        "default": 0
                                    },
                                    "override": {
                                        "type": "integer",
                                        "enum": [0,1],
                                        "default": 0
                                    },
                                    "source": {
                                        "type": "string",
                                        "example": "config.xml"
                                    },
                                    "vsys": {
                                        "type": "string",
                                        "example": "vsys1"
                                    },
                                    "xml": {
                                        "type": "string"
                                    },
                                    "latitude": {
                                        "type": "string"
                                    },
                                    "longitude": {
                                        "type": "string"
                                    },
                                    "addresses": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": ["name","vsys","source"],
                                "type": "object"
                            },
                            "examples": {
                                "REGION": {
                                    "value": [{
                                        "name": "region",
                                        "latitude": "50",
                                        "longitude": "130.5",
                                        "addresses": ["address1", "address2"],
                                        "vsys": "vsys1",
                                        "source": "config.xml"
                                    }]
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "put": {
                "tags": [
                    "Regions"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Updates a region params",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ObjectInterfaces\\RegionInterface::updateRegions",
                "requestBody": {
                    "description": "Region params to update",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/updateSchema"
                                }]
                            }
                        }
                    }
                },
                "responses":{
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Regions"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Deletes a region",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ObjectInterfaces\\RegionInterface::deleteRegions",
                "requestBody": {
                    "description": "Region id to delete",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/deleteSchema"
                                }]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/objects/profiles/{limit}":{
            "get": {
                "tags": [
                    "Profiles"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    },
                    {
                        "in": "path",
            "name": "limit",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Number of objects to show (can be 'all')"
                    }
                ],
                "description": "Returns all tags",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ObjectInterfaces\\ProfileInterface::getProfiles",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/objects/profiles": {
            "post": {
                "tags": [
                    "Profiles"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Insert a profile",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ObjectInterfaces\\ProfileInterface::addProfiles",
                "requestBody": {
                    "description": "The profile you want to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "uuid": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "checkit": {
                                        "type": "integer",
                                        "enum": [0,1],
                                        "default": 0
                                    },
                                    "dummy": {
                                        "type": "integer",
                                        "enum": [0,1],
                                        "default": 0
                                    },
                                    "invalid": {
                                        "type": "integer",
                                        "enum": [0,1],
                                        "default": 0
                                    },
                                    "override": {
                                        "type": "integer",
                                        "enum": [0,1],
                                        "default": 0
                                    },
                                    "source": {
                                        "type": "string",
                                        "example": "config.xml"
                                    },
                                    "vsys": {
                                        "type": "string",
                                        "example": "vsys1"
                                    },
                                    "xml": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": ["virus","vulnerability","wildfire-analysis","file-blocking","data-filtering","spyware","url-filtering"]
                                    }
                                },
                                "type": "object",
                                "required": ["name","vsys","source","type", "xml"]
                            },
                            "examples": {
                                "ANTIVIRUS": {
                                    "value":[{
                                        "name": "antivirus",
                                        "type": "virus",
                                        "xml": "<entry name='antivirus'></entry>",
                                        "vsys": "vsys1",
                                        "source": "config.xml"
                                    }]
                                },
                                "VULNERABILITY": {
                                    "value":[{
                                        "name": "vulnerability",
                                        "type": "vulnerability",
                                        "xml": "<entry name='vulnerability'></vulnerability>",
                                        "vsys": "vsys1",
                                        "source": "config.xml"
                                    }]
                                },
                                "WILDFIRE-ANALYSIS": {
                                    "value":[{
                                        "name": "wildfire",
                                        "type": "wildfire-analysis",
                                        "xml": "<entry name='wildfire'></wildfire>",
                                        "vsys": "vsys1",
                                        "source": "config.xml"
                                    }]
                                },
                                "FILE-BLOCKING": {
                                    "value":[{
                                        "name": "fileBlocking",
                                        "type": "file-blocking",
                                        "xml": "<entry name='fileBlocking'></entry>",
                                        "vsys": "vsys1",
                                        "source": "config.xml"
                                    }]
                                },
                                "DATA-FILTERING": {
                                    "value":[{
                                        "name": "dataFiltering",
                                        "type": "data-filtering",
                                        "xml": "<entry name='dataFiltering'></entry>",
                                        "vsys": "vsys1",
                                        "source": "config.xml"
                                    }]
                                },
                                "SPYWARE": {
                                    "value":[{
                                        "name": "spyware",
                                        "type": "spyware",
                                        "xml": "<entry name='spyware'></entry>",
                                        "vsys": "vsys1",
                                        "source": "config.xml"
                                    }]
                                },
                                "URL-FILTERING": {
                                    "value":[{
                                        "name": "urlFiltering",
                                        "type": "url-filtering",
                                        "xml": "<entry name='url-filtering'></entry>",
                                        "vsys": "vsys1",
                                        "source": "config.xml"
                                    }]
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "put": {
                "tags": [
                    "Profiles"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Updates a profile params",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ObjectInterfaces\\ProfileInterface::updateProfiles",
                "requestBody": {
                    "description": "Profile params to update",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/updateSchema"
                                }]
                            }
                        }
                    }
                },
                "responses":{
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Profiles"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Deletes a profile",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ObjectInterfaces\\ProfileInterface::deleteProfiles",
                "requestBody": {
                    "description": "Profile id to delete",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/deleteSchema"
                                }]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/objects/profileGroups/{limit}":{
            "get": {
                "tags": [
                    "Profile Groups"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    },
                    {
                        "in": "path",
            "name": "limit",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Number of objects to show (can be 'all')"
                    }
                ],
                "description": "Returns all profileGroups",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ObjectInterfaces\\ProfileGroupInterface::getProfileGroups",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/objects/profileGroups": {
            "post": {
                "tags": [
                    "Profile Groups"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Insert a profile group",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ObjectInterfaces\\ProfileGroupInterface::addProfileGroups",
                "requestBody": {
                    "description": "The profile group you want to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "uuid": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "checkit": {
                                        "type": "integer",
                                        "enum": [0,1],
                                        "default": 0
                                    },
                                    "dummy": {
                                        "type": "integer",
                                        "enum": [0,1],
                                        "default": 0
                                    },
                                    "invalid": {
                                        "type": "integer",
                                        "enum": [0,1],
                                        "default": 0
                                    },
                                    "override": {
                                        "type": "integer",
                                        "enum": [0,1],
                                        "default": 0
                                    },
                                    "source": {
                                        "type": "string",
                                        "example": "config.xml"
                                    },
                                    "vsys": {
                                        "type": "string",
                                        "example": "vsys1"
                                    },
                                    "xml": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    },
                                    "vtype": {
                                        "type": "string"
                                    }
                                },
                                "required": ["name","vsys","source"],
                                "type": "object"
                            },
                            "examples": {
                                "PROFILE GROUP": {
                                    "value": [{
                                        "name": "profileGroup",
                                        "type": "profile-groups",
                                        "xml": "<entry name=\"profileGroup\">\n <virus>\n<member>virus</member>\n</virus>\n<spyware>\n<member>spyware</member>\n</spyware>\n</entry>",
                                        "vsys": "vsys1",
                                        "source": "config.xml"
                                    }]
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "put": {
                "tags": [
                    "Profile Groups"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Updates a profile params",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ObjectInterfaces\\ProfileGroupInterface::updateProfileGroups",
                "requestBody": {
                    "description": "Profile params to update",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/updateSchema"
                                }]
                            }
                        }
                    }
                },
                "responses":{
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Profile Groups"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Deletes a profile",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ObjectInterfaces\\ProfileGroupInterface::deleteProfileGroups",
                "requestBody": {
                    "description": "Profile id to delete",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/deleteSchema"
                                }]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/objects/logSettings/{limit}":{
            "get": {
                "tags": [
                    "Log Forwarding Profiles"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    },
                    {
                        "in": "path",
            "name": "limit",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Number of objects to show (can be 'all')"
                    }
                ],
                "description": "Returns all log forwarding profiles",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ObjectInterfaces\\LogSettingInterface::getLogSettings",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/objects/logSettings": {
            "post": {
                "tags": [
                    "Log Forwarding Profiles"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Insert a log forwarding profile",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ObjectInterfaces\\LogSettingInterface::addLogSettings",
                "requestBody": {
                    "description": "The log forwarding profile you want to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "uuid": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "checkit": {
                                        "type": "integer",
                                        "enum": [0,1],
                                        "default": 0
                                    },
                                    "dummy": {
                                        "type": "integer",
                                        "enum": [0,1],
                                        "default": 0
                                    },
                                    "invalid": {
                                        "type": "integer",
                                        "enum": [0,1],
                                        "default": 0
                                    },
                                    "override": {
                                        "type": "integer",
                                        "enum": [0,1],
                                        "default": 0
                                    },
                                    "source": {
                                        "type": "string",
                                        "example": "config.xml"
                                    },
                                    "vsys": {
                                        "type": "string",
                                        "example": "vsys1"
                                    },
                                    "xml": {
                                      "type": "string"
                                    },
                                    "type": {
                                      "type": "string"
                                    }
                                },
                                "type": "object",
                                "required": ["name","vsys","source"]
                            },
                            "examples": {
                                "LOG FORWARDING": {
                                    "value": [{
                                        "name": "logForwarding",
                                        "type": "profiles",
                                        "xml": "<entry name=\"logForwarding\">\n<match-list/>\n</entry>",
                                        "vsys": "vsys1",
                                        "source": "config.xml"
                                    }]
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                  }
            },
            "put": {
              "tags": [
                "Log Forwarding Profiles"
              ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
              "description": "Updates a log forwarding profile params",
              "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ObjectInterfaces\\LogSettingInterface::updateLogSettings",
              "requestBody": {
                "description": "Log forwarding profile params to update",
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [{
                        "$ref": "#/components/schemas/updateSchema"
                      }]
                    }
                  }
                }
              },
              "responses":{
                "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
              }
            },
            "delete": {
              "tags": [
                "Log Forwarding Profiles"
              ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
              "description": "Deletes a log forwarding profile",
              "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ObjectInterfaces\\LogSettingInterface::deleteLogSettings",
              "requestBody": {
                "description": "Log forwarding profile id to delete",
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [{
                        "$ref": "#/components/schemas/deleteSchema"
                      }]
                    }
                  }
                }
              },
              "responses": {
                "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
              }
            }
        },
        "/api/v1/{projectId}/objects/externalList/{limit}":{
            "get": {
                "tags": [
                    "External Lists"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    },
                    {
                        "in": "path",
            "name": "limit",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Number of objects to show (can be 'all')"
                    }
                ],
                "description": "Returns all external lists",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ObjectInterfaces\\ExternalListInterface::getExternalLists",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/objects/externalList": {
            "post": {
                "tags": [
                "External Lists"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Insert a external list",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ObjectInterfaces\\ExternalListInterface::addExternalLists",
                "requestBody": {
                    "description": "The external list you want to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "uuid": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "checkit": {
                                        "type": "integer",
                                        "enum": [0,1],
                                        "default": 0
                                    },
                                    "dummy": {
                                        "type": "integer",
                                        "enum": [0,1],
                                        "default": 0
                                    },
                                    "invalid": {
                                        "type": "integer",
                                        "enum": [0,1],
                                        "default": 0
                                    },
                                    "override": {
                                        "type": "integer",
                                        "enum": [0,1],
                                        "default": 0
                                    },
                                    "source": {
                                        "type": "string",
                                        "example": "config.xml"
                                    },
                                    "vsys": {
                                        "type": "string",
                                        "example": "vsys1"
                                    },
                                    "xml": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "required": ["name","vsys","source"]
                            },
                            "examples": {
                                "EXTERNAL-LIST": {
                                    "value": [{
                                        "name": "externalList",
                                        "type": "ip",
                                        "xml": "<entry name=\"externalList\">\n<type>\n<ip>\n<recurring>\n<hourly/>\n</recurring>\n<url></url>\n</ip>\n</type>\n</entry>",
                                        "vsys": "vsys1",
                                        "source": "config.xml"
                                    }]
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "put": {
              "tags": [
                "External Lists"
              ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
              "description": "Updates an external list params",
              "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ObjectInterfaces\\ExternalListInterface::updateExternalLists",
              "requestBody": {
                "description": "External List params to update",
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [{
                        "$ref": "#/components/schemas/updateSchema"
                      }]
                    }
                  }
                }
              },
              "responses":{
                "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
              }
            },
            "delete": {
              "tags": [
                "External Lists"
              ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
              "description": "Deletes an external list",
              "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ObjectInterfaces\\ExternalListInterface::deleteExternalLists",
              "requestBody": {
                "description": "External list id to delete",
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [{
                        "$ref": "#/components/schemas/deleteSchema"
                      }]
                    }
                  }
                }
              },
              "responses": {
                "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
              }
            }
        },
        "/api/v1/{projectId}/objects/schedules{limit}":{
            "get": {
                "tags": [
                    "Schedules"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    },
                    {
                        "in": "path",
            "name": "limit",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Number of objects to show (can be 'all')"
                    }
                ],
                "description": "Returns all schedules",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ObjectInterfaces\\ScheduleInterface::getSchedules",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/objects/schedules": {
            "post": {
                "tags": [
                    "Schedules"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Insert a schedule",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ObjectInterfaces\\ScheduleInterface::addSchedules",
                "requestBody": {
                    "description": "The schedule you want to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "uuid": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "checkit": {
                                        "type": "integer",
                                        "enum": [0,1],
                                        "default": 0
                                    },
                                    "dummy": {
                                        "type": "integer",
                                        "enum": [0,1],
                                        "default": 0
                                    },
                                    "invalid": {
                                        "type": "integer",
                                        "enum": [0,1],
                                        "default": 0
                                    },
                                    "override": {
                                        "type": "integer",
                                        "enum": [0,1],
                                        "default": 0
                                    },
                                    "source": {
                                        "type": "string",
                                        "example": "config.xml"
                                    },
                                    "vsys": {
                                        "type": "string",
                                        "example": "vsys1"
                                    },
                                    "xml": {
                                      "type": "string"
                                    },
                                    "type": {
                                      "type": "string"
                                    }
                                },
                                "type": "object",
                                "required": ["name","vsys","source"]
                            },
                            "examples": {
                                "SCHEDULE": {
                                    "value": [{
                                        "name": "schedule",
                                        "type": "schedules",
                                        "xml": "<entry name=\"schedule\">\n<schedule-type>\n<recurring>\n<weekly>\n</thursday>\n<member></member>\n</thursday>\n</weekly>\n</recurring>\n</schedule-type>\n</entry>",
                                        "vsys": "vsys1",
                                        "source": "config.xml"
                                    }]
                                }
                            }
                        }
                    }
                },
                "responses": {
                "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "put": {
              "tags": [
                "Schedules"
              ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
              "description": "Updates a schedule params",
              "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ObjectInterfaces\\ScheduleInterface::updateSchedules",
              "requestBody": {
                "description": "Schedule params to update",
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [{
                        "$ref": "#/components/schemas/updateSchema"
                      }]
                    }
                  }
                }
              },
              "responses":{
                "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
              }
            },
            "delete": {
              "tags": [
                "Schedules"
              ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
              "description": "Deletes a schedule",
              "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ObjectInterfaces\\ScheduleInterface::deleteSchedules",
              "requestBody": {
                "description": "Schedule id to delete",
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [{
                        "$ref": "#/components/schemas/deleteSchema"
                      }]
                    }
                  }
                }
              },
              "responses": {
                "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
              }
            }
        },

        "/api/v1/{projectId}/network/interfaces/{limit}": {
            "get": {
              "tags": [
                "Interfaces"
              ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    },
                    {
                        "in": "path",
            "name": "limit",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Number of objects to show (can be 'all')"
                    }
                ],
              "description": "Returns all interface",
              "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\NetworkInterfaces\\InterfaceInterface::getInterfaces",
              "responses": {
                "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
              }
            }
        },
        "/api/v1/{projectId}/network/interfaces": {
            "get": {
              "tags": [
                "Interfaces"
              ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    }
                ],
              "description": "Returns all interface",
              "responses": {
                "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
              }
            },
            "post": {
                "tags": [
                "Interfaces"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Insert an interface",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\NetworkInterfaces\\InterfaceInterface::addInterfaces",
                "requestBody": {
                    "description": "The interface you want to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "uuid": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "checkit": {
                                        "type": "integer",
                                        "enum": [0,1],
                                        "default": 0
                                    },
                                    "dummy": {
                                        "type": "integer",
                                        "enum": [0,1],
                                        "default": 0
                                    },
                                    "invalid": {
                                        "type": "integer",
                                        "enum": [0,1],
                                        "default": 0
                                    },
                                    "override": {
                                        "type": "integer",
                                        "enum": [0,1],
                                        "default": 0
                                    },
                                    "source": {
                                        "type": "string",
                                        "example": "config.xml"
                                    },
                                    "vsys": {
                                        "type": "string",
                                        "example": "vsys1"
                                    },
                                    "template": {
                                        "type": "integer"
                                    },
                                    "map_name": {
                                      "type": "string"
                                    },
                                    "link_speed": {
                                      "type": "string"
                                    },
                                    "link_duplex": {
                                      "type": "string"
                                    },
                                    "link_state": {
                                      "type": "string",
                                       "enum": ["auto", "up","down"]
                                    },
                                    "ipv6": {
                                      "type": "string"
                                    },
                                    "untagged_sub_interface": {
                                      "type": "boolean"
                                    },
                                    "unitname": {
                                      "type": "string"
                                    },
                                    "unittag": {
                                      "type": "integer"
                                    },
                                    "map_unitname": {
                                      "type": "string"
                                    },
                                    "map_unittag": {
                                      "type": "integer"
                                    },
                                    "unitipaddress": {
                                      "type": "string"
                                    },
                                    "comment": {
                                      "type": "string"
                                    },
                                    "type": {
                                      "type": "string"
                                    },
                                    "map_vr": {
                                      "type": "string"
                                    },
                                    "mtu": {
                                      "type": "integer"
                                    },
                                    "arp": {
                                      "type": "string"
                                    },
                                    "aggregate_group": {
                                      "type": "string"
                                    },
                                    "ppoe": {
                                      "type": "string"
                                    },
                                    "dhcp_client": {
                                      "type": "string"
                                    },
                                    "media": {
                                      "type": "string"
                                    },
                                    "ipv4_type": {
                                      "type": "string"
                                    },
                                    "dhcp_client_default_route_metric": {
                                      "type": "integer"
                                    },
                                    "dhcp_client_enable": {
                                      "type": "boolean"
                                    },
                                    "dhcp_client_create_default_route": {
                                      "type": "boolean"
                                    },
                                    "lacp_port_priority": {
                                      "type": "integer"
                                    },
                                    "lacp": {
                                      "type": "string"
                                    },
                                    "ip_classifier": {
                                      "type": "string"
                                    },
                                    "log_card": {
                                      "type": "string"
                                    },
                                    "lldp": {
                                      "type": "string"
                                    },
                                    "nddproxy": {
                                      "type": "string"
                                    },
                                    "ipv4_mss_adjustment": {
                                      "type": "string"
                                    },
                                    "ipv6_mss_adjustment": {
                                      "type": "string"
                                    },
                                    "zone": {
                                      "type": "string"
                                    },
                                    "address": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "tag": {
                                      "type": "string"
                                    },
                                    "virtual-router": {
                                      "type": "string"
                                    },
                                    "interface-management": {
                                      "type": "string"
                                    },
                                    "vlan": {
                                      "type": "string"
                                    },
                                    "netflow-profile": {
                                      "type": "string"
                                    }
                                },
                                "type": "object",
                                "required": ["name","vsys","source","media"]
                            },
                            "examples": {
                                "Ethernet TAP": {
                                    "value": [{
                                        "name": "ethernet1/1",
                                        "description": "Ethernet interface type Tap",
                                        "comment": "",
                                        "zone": "Trust",
                                        "link_speed": "auto",
                                        "link_duplex": "auto",
                                        "link_state": "auto",
                                        "media": "ethernet",
                                        "type": "tap",
                                        "vsys": "vsys1",
                                        "source": "config.xml"
                                    }]
                                },
                                "Ethernet HA": {
                                    "value": [{
                                        "name": "ethernet1/2",
                                        "description": "Ethernet interface type HA",
                                        "media": "ethernet",
                                        "type": "ha",
                                        "link_speed": "auto",
                                        "link_duplex": "auto",
                                        "link_state": "down",
                                        "vsys": "vsys1",
                                        "source": "config.xml"
                                    }]
                                },
                                "Ethernet Virtual Wire": {
                                    "value": [{
                                        "name": "ethernet1/3",
                                        "description": "Ethernet interface type Virtual-Wire",
                                        "media": "ethernet",
                                        "type": "virtual-wire",
                                        "zone": "Trust",
                                        "virtual-wire": "vw",
                                        "link_speed": "auto",
                                        "link_duplex": "auto",
                                        "link_state": "up",
                                        "lldp": "<lldp><enable>no</enable></lldp>",
                                        "vsys": "vsys1",
                                        "source": "config.xml"
                                    }]
                                },
                                "Ethernet Layer2": {
                                    "value": [{
                                        "name": "ethernet1/4",
                                        "description": "Ethernet interface type Layer2",
                                        "media": "ethernet",
                                        "type": "layer2",
                                        "zone": "Trust",
                                        "vlan": "vlan",
                                        "link_speed": "auto",
                                        "link_duplex": "auto",
                                        "link_state": "up",
                                        "lldp": "<lldp><enable>no</enable></lldp>",
                                        "vsys": "vsys1",
                                        "source": "config.xml"
                                    }]
                                },
                                "Ethernet Layer3": {
                                    "value": [{
                                        "name": "ethernet1/5",
                                        "description": "Ethernet interface type layer3",
                                        "media": "ethernet",
                                        "type": "layer3",
                                        "zone": "Trust",
                                        "virtual-router": "vr",
                                        "ipv4_type": "static",
                                        "unitipaddress": "<ip><entry name=\"1.2.3.4\"/></ip>",
                                        "link_speed": "auto",
                                        "link_duplex": "auto",
                                        "link_state": "up",
                                        "interface-management": "intefaceMgmt",
                                        "mtu": 577,
                                        "adjust_tcp_mss": 1,
                                        "ipv4_adjust_tcp_mss": 40,
                                        "ipv6_adjust_tcp_mss": 60,
                                        "untagged_sub_interface": 1,
                                        "vsys": "vsys1",
                                        "source": "config.xml"
                                    }]
                                },
                                "Vlan": {
                                    "value": [{
                                        "name": "vlan",
                                        "description": "Vlan interface",
                                        "media": "vlan",
                                        "type": "vlan",
                                        "vlan": "vlanObject",
                                        "virtual-router": "vr",
                                        "zone": "Trust",
                                        "interface-management": "intefaceMgmt",
                                        "ipv4_type": "dhcp-client",
                                        "dhcp_client_enable": 1,
                                        "dhcp_client_create_default_route": 1,
                                        "dhcp_client_default_route_metric": 500,
                                        "mtu": 577,
                                        "adjust_tcp_mss": 1,
                                        "ipv4_adjust_tcp_mss": 40,
                                        "ipv6_adjust_tcp_mss": 60,
                                        "vsys": "vsys1",
                                        "source": "config.xml"
                                    }]
                                },
                                "Loopback": {
                                    "value": [{
                                        "name": "loopback",
                                        "description": "Loopback interface",
                                        "media": "loopback",
                                        "virtual-router": "vr",
                                        "zone": "Trust",
                                        "unitipaddress": "<ip><entry name=\"1.2.3.4\"/></ip>",
                                        "interface-management": "intefaceMgmt",
                                        "mtu": 577,
                                        "adjust_tcp_mss": 1,
                                        "ipv4_adjust_tcp_mss": 40,
                                        "ipv6_adjust_tcp_mss": 60,
                                        "vsys": "vsys1",
                                        "source": "config.xml"
                                    }]
                                },
                                "Tunnel": {
                                    "value": [{
                                        "name": "tunnel",
                                        "description": "Tunnel interface",
                                        "media": "tunnel",
                                        "type": "layer3",
                                        "virtual-router": "vr",
                                        "zone": "Trust",
                                        "unitipaddress": "<ip><entry name=\"1.2.3.4\"/></ip>",
                                        "interface-management": "intefaceMgmt",
                                        "mtu": 577,
                                        "vsys": "vsys1",
                                        "source": "config.xml"
                                    }]
                                }
                            }
                        }
                    }
                },
                "responses": {
                "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "put": {
              "tags": [
                "Interfaces"
              ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
              "description": "Updates interface params",
              "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\NetworkInterfaces\\InterfaceInterface::updateInterfaces",
              "requestBody": {
                "description": "Interface params to update",
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [{
                        "$ref": "#/components/schemas/updateSchema"
                      }]
                    }
                  }
                }
              },
              "responses":{
                "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
              }
            },
            "delete": {
              "tags": [
                "Interfaces"
              ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
              "description": "Deletes an interface",
              "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\NetworkInterfaces\\InterfaceInterface::deleteInterfaces",
              "requestBody": {
                "description": "Interface id to delete",
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [{
                        "$ref": "#/components/schemas/deleteSchema"
                      }]
                    }
                  }
                }
              },
              "responses": {
                "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
              }
            }
        },
        "/api/v1/{projectId}/network/zones": {
            "get": {
              "tags": [
                "Zones"
              ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    }
                ],
              "description": "Returns all zones",
              "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\NetworkInterfaces\\ZoneInterface::getZones",
              "responses": {
                "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
              }
            },
            "post": {
                "tags": [
                "Zones"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Insert a zone",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\NetworkInterfaces\\ZoneInterface::addZones",
                "requestBody": {
                    "description": "The zone you want to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "uuid": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "checkit": {
                                        "type": "integer",
                                        "enum": [0,1],
                                        "default": 0
                                    },
                                    "dummy": {
                                        "type": "integer",
                                        "enum": [0,1],
                                        "default": 0
                                    },
                                    "invalid": {
                                        "type": "integer",
                                        "enum": [0,1],
                                        "default": 0
                                    },
                                    "override": {
                                        "type": "integer",
                                        "enum": [0,1],
                                        "default": 0
                                    },
                                    "source": {
                                        "type": "string",
                                        "example": "config.xml"
                                    },
                                    "vsys": {
                                        "type": "string",
                                        "example": "vsys1"
                                    },
                                    "template": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    },
                                    "zone_protection_profile": {
                                        "type": "string"
                                    },
                                    "enable_user_identification": {
                                        "type": "boolean"
                                    },
                                    "enable_packet_buffer_protection": {
                                        "type": "boolean"
                                    },
                                    "interfaces": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "log_setting": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                    },
                                    "include_list": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                    },
                                    "exclude_list": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                    }
                                },
                                "type": "object",
                                "required": ["type"]
                            },
                            "examples": {
                                "Tap": {
                                    "value": [{
                                        "name": "zoneTap",
                                        "description": "Zone type Tap",
                                        "type": "tap",
                                        "vsys": "vsys1",
                                        "zone_protection_profile": "protectionProfile",
                                        "enable_packet_buffer_protection": 1,
                                        "enable_user_identification": 1,
                                        "interfaces": ["vlan"],
                                        "include_list": ["1.1.1.1","10.30.40.50"],
                                        "exclude_list": ["2.3.4.5"],
                                        "log_setting": "logSetting",
                                        "source": "config.xml"
                                    }]
                                },
                                "Virtual Vire": {
                                    "value": [{
                                        "name": "zoneVW",
                                        "description": "Zone type Virtual-Wire",
                                        "type": "virtual-wire",
                                        "vsys": "vsys1",
                                        "zone_protection_profile": "protectionProfile",
                                        "enable_packet_buffer_protection": 1,
                                        "enable_user_identification": 1,
                                        "interfaces": ["vlan"],
                                        "include_list": ["1.1.1.1","10.30.40.50"],
                                        "exclude_list": ["2.3.4.5"],
                                        "log_setting": "logSetting",
                                        "source": "config.xml"
                                    }]
                                },
                                "Layer2": {
                                    "value": [
                                        {
                                            "name": "zoneL2",
                                            "description": "Zone type Layer2",
                                            "type": "layer2",
                                            "vsys": "vsys1",
                                            "zone_protection_profile": "protectionProfile",
                                            "enable_packet_buffer_protection": 1,
                                            "enable_user_identification": 1,
                                            "interfaces": [
                                                "vlan"
                                            ],
                                            "include_list": [
                                                "1.1.1.1",
                                                "10.30.40.50"
                                            ],
                                            "exclude_list": [
                                                "2.3.4.5"
                                            ],
                                            "log_setting": "None",
                                            "source": "config.xml"
                                        }
                                    ]

                                },
                                "Layer3": {
                                    "value": [{
                                        "name": "zoneL3",
                                        "description": "Zone type Layer3",
                                        "type": "layer3",
                                        "vsys": "vsys1",
                                        "zone_protection_profile": "None",
                                        "enable_packet_buffer_protection": 1,
                                        "enable_user_identification": 1,
                                        "interfaces": ["vlan"],
                                        "include_list": ["1.1.1.1","10.30.40.50"],
                                        "exclude_list": ["2.3.4.5"],
                                        "log_setting": "logSetting",
                                        "source": "config.xml"
                                    }]
                                },
                                "Tunnel": {
                                    "value": [{
                                        "name": "zoneTunnel",
                                        "description": "Zone type Tunnel",
                                        "type": "tunnel",
                                        "vsys": "vsys1",
                                        "zone_protection_profile": "None",
                                        "enable_packet_buffer_protection": 1,
                                        "enable_user_identification": 1,
                                        "include_list": ["1.1.1.1","10.30.40.50"],
                                        "exclude_list": ["2.3.4.5"],
                                        "log_-setting": "logSetting",
                                        "source": "config.xml"
                                    }]
                                }
                            }
                        }
                    }
                },

                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "put": {
              "tags": [
                "Zones"
              ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
              "description": "Updates zone params",
              "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\NetworkInterfaces\\ZoneInterface::updateZones",
              "requestBody": {
                "description": "Zone params to update",
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [{
                        "$ref": "#/components/schemas/updateSchema"
                      }]
                    }
                  }
                }
              },
              "responses":{
                "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
              }
            },
            "delete": {
              "tags": [
                "Zones"
              ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
              "description": "Deletes a zonoe",
              "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\NetworkInterfaces\\ZoneInterface::deleteZones",
              "requestBody": {
                "description": "Zone id to delete",
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [{
                        "$ref": "#/components/schemas/deleteSchema"
                      }]
                    }
                  }
                }
              },
              "responses": {
                "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
              }
            }
        },
        "/api/v1/{projectId}/network/zones/{limit}": {
            "get": {
              "tags": [
                "Zones"
              ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    },
                    {
                        "in": "path",
            "name": "limit",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Number of objects to show (can be 'all')"
                    }
                ],
              "description": "Returns all zones",
              "responses": {
                "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
              }
            }
        },
        "/api/v1/{projectId}/network/virtualRouters": {
            "get": {
              "tags": [
                "Virtual Routers"
              ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    }
                ],
              "description": "Returns all virtual routers",
              "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\NetworkInterfaces\\VirtualRouterInterface::getVirtualRouters",
              "responses": {
                "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
              }
            },
            "post": {
              "tags": [
                "Virtual Routers"
              ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
              "description": "Insert a virtual router",
              "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\NetworkInterfaces\\VirtualRouterInterface::addVirtualRouters",
              "requestBody": {
                "description": "The virtual router you want to create",
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                        "type": "array",
                        "items":{
                      "properties": {
                          "uuid": {
                              "type": "string"
                          },
                          "name": {
                              "type": "string"
                          },
                          "description": {
                              "type": "string"
                          },
                          "checkit": {
                              "type": "integer",
                              "enum": [0,1],
                              "default": 0
                          },
                          "dummy": {
                              "type": "integer",
                              "enum": [0,1],
                              "default": 0
                          },
                          "invalid": {
                              "type": "integer",
                              "enum": [0,1],
                              "default": 0
                          },
                          "override": {
                              "type": "integer",
                              "enum": [0,1],
                              "default": 0
                          },
                          "source": {
                              "type": "string",
                              "example": "config.xml"
                          },
                          "vsys": {
                              "type": "string",
                              "example": "vsys1"
                          },
                        "template": {
                          "type": "integer"
                        },
                        "map_name": {
                          "type": "string"
                        },
                        "admin_dist_static": {
                          "type": "integer"
                        },
                        "admin_dist_static_ipv6": {
                          "type": "integer"
                        },
                        "admin_dist_ospf_int": {
                          "type": "integer"
                        },
                        "admin_dist_ospf_ext": {
                          "type": "integer"
                        },
                        "admin_dist_ospfv3_int": {
                          "type": "integer"
                        },
                        "admin_dist_ospfv3_ext": {
                          "type": "integer"
                        },
                        "admin_dist_ibgp": {
                          "type": "integer"
                        },
                        "admin_dist_ebgp": {
                          "type": "integer"
                        },
                        "admin_dist_rip": {
                          "type": "integer"
                        },
                        "protocol": {
                          "type": "string"
                        },
                        "multicast": {
                          "type": "string"
                        },
                        "ecmp": {
                          "type": "string"
                        },
                        "interfaces": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                    }
                      }
                    }
                  }
                }
              },
              "responses": {
                "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
              }
            },
            "put": {
              "tags": [
                "Virtual Routers"
              ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
              "description": "Updates virtual router params",
              "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\NetworkInterfaces\\VirtualRouterInterface::updateVirtualRouters",
              "requestBody": {
                "description": "Virtual Router params to update",
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [{
                        "$ref": "#/components/schemas/updateSchema"
                      }]
                    }
                  }
                }
              },
              "responses":{
                "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
              }
            },
            "delete": {
              "tags": [
                "Virtual Routers"
              ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
              "description": "Deletes a virtual router",
              "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\NetworkInterfaces\\VirtualRouterInterface::deleteVirtualRouters",
              "requestBody": {
                "description": "Virtual Router id to delete",
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [{
                        "$ref": "#/components/schemas/deleteSchema"
                      }]
                    }
                  }
                }
              },
              "responses": {
                "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
              }
            }
        },
        "/api/v1/{projectId}/network/virtualRouters/{limit}": {
            "get": {
              "tags": [
                "Virtual Routers"
              ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    },
                    {
                        "in": "path",
            "name": "limit",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Number of objects to show (can be 'all')"
                    }
                ],
              "description": "Returns all virtual routers",
              "responses": {
                "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
              }
            }
        },
        "/api/v1/{projectId}/network/virtualWires": {
            "get": {
              "tags": [
                "Virtual Wires"
              ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    }
                ],
              "description": "Returns all virtual wires",
              "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\NetworkInterfaces\\VirtualWireInterface::getVirtualWires",
              "responses": {
                "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
              }
            },
            "post": {
              "tags": [
                "Virtual Wires"
              ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
              "description": "Insert a virtual wire",
              "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\NetworkInterfaces\\VirtualWireInterface::addVirtualWires",
              "requestBody": {
                "description": "The virtual wire you want to create",
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "properties": {
                          "uuid": {
                              "type": "string"
                          },
                          "name": {
                              "type": "string"
                          },
                          "description": {
                              "type": "string"
                          },
                          "checkit": {
                              "type": "integer",
                              "enum": [0,1],
                              "default": 0
                          },
                          "dummy": {
                              "type": "integer",
                              "enum": [0,1],
                              "default": 0
                          },
                          "invalid": {
                              "type": "integer",
                              "enum": [0,1],
                              "default": 0
                          },
                          "override": {
                              "type": "integer",
                              "enum": [0,1],
                              "default": 0
                          },
                          "source": {
                              "type": "string",
                              "example": "config.xml"
                          },
                          "vsys": {
                              "type": "string",
                              "example": "vsys1"
                          },
                        "template": {
                          "type": "integer"
                        },
                        "multicast_firewalling": {
                          "type": "boolean"
                        },
                        "tag_allowed": {
                          "type": "string"
                        },
                        "link_state_pass_through": {
                          "type": "boolean"
                        },
                        "interface1": {
                          "type": "string"
                        },
                        "interface2": {
                          "type": "string"
                        }
                      },
                        "required": ["name","vsys","source"],
                      "type": "object"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
              }
            },
            "put": {
              "tags": [
                "Virtual Wires"
              ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
              "description": "Updates virtual wire params",
              "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\NetworkInterfaces\\VirtualWireInterface::updateVirtualWires",
              "requestBody": {
                "description": "Virtual Wire params to update",
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [{
                        "$ref": "#/components/schemas/updateSchema"
                      }]
                    }
                  }
                }
              },
              "responses":{
                "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
              }
            },
            "delete": {
              "tags": [
                "Virtual Wires"
              ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
              "description": "Deletes a virtual wire",
              "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\NetworkInterfaces\\VirtualWireInterface::deleteVirtualWires",
              "requestBody": {
                "description": "Virtual Wire id to delete",
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [{
                        "$ref": "#/components/schemas/deleteSchema"
                      }]
                    }
                  }
                }
              },
              "responses": {
                "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
              }
            }
        },
        "/api/v1/{projectId}/network/virtualWires/{limit}": {
            "get": {
              "tags": [
                "Virtual Wires"
              ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    },
                    {
                        "in": "path",
            "name": "limit",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Number of objects to show (can be 'all')"
                    }
                ],
              "description": "Returns all virtual wires",
              "responses": {
                "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
              }
            }
        },
        "/api/v1/{projectId}/network/vlans": {
            "get": {
              "tags": [
                "Vlans"
              ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    }
                ],
              "description": "Returns all vlans",
              "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\NetworkInterfaces\\VlanInterface::getVlans",
              "responses": {
                "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
              }
            },
            "post": {
              "tags": [
                "Vlans"
              ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
              "description": "Insert a vlan",
              "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\NetworkInterfaces\\VlanInterface::addVlans",
              "requestBody": {
                "description": "The vlan you want to create",
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "properties": {
                          "uuid": {
                              "type": "string"
                          },
                          "name": {
                              "type": "string"
                          },
                          "description": {
                              "type": "string"
                          },
                          "checkit": {
                              "type": "integer",
                              "enum": [0,1],
                              "default": 0
                          },
                          "dummy": {
                              "type": "integer",
                              "enum": [0,1],
                              "default": 0
                          },
                          "invalid": {
                              "type": "integer",
                              "enum": [0,1],
                              "default": 0
                          },
                          "override": {
                              "type": "integer",
                              "enum": [0,1],
                              "default": 0
                          },
                          "source": {
                              "type": "string",
                              "example": "config.xml"
                          },
                          "vsys": {
                              "type": "string",
                              "example": "vsys1"
                          },
                        "template": {
                          "type": "integer"
                        },
                        "l3_forwarding": {
                          "type": "boolean"
                        },
                        "virtual-interface": {
                          "type": "boolean"
                        },
                        "interfaces": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "mac-address": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "mac-interface": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "type": "object",
                        "required": ["name","vsys","source"]
                    }
                  }
                }
              },
              "responses": {
                "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
              }
            },
            "put": {
              "tags": [
                "Vlans"
              ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
              "description": "Updates vlan params",
              "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\NetworkInterfaces\\VlanInterface::updateVlans",
              "requestBody": {
                "description": "Vlan params to update",
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [{
                        "$ref": "#/components/schemas/updateSchema"
                      }]
                    }
                  }
                }
              },
              "responses":{
                "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
              }
            },
            "delete": {
              "tags": [
                "Vlans"
              ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
              "description": "Deletes a vlan",
              "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\NetworkInterfaces\\VlanInterface::deleteVlans",
              "requestBody": {
                "description": "Vlan id to delete",
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [{
                        "$ref": "#/components/schemas/deleteSchema"
                      }]
                    }
                  }
                }
              },
              "responses": {
                "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
              }
            }
        },
        "/api/v1/{projectId}/network/vlans/{limit}": {
            "get": {
              "tags": [
                "Vlans"
              ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    },
                    {
                        "in": "path",
            "name": "limit",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Number of objects to show (can be 'all')"
                    }
                ],
              "description": "Returns all vlans",
              "responses": {
                "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
              }
            }
        },
        "/api/v1/{projectId}/network/ipsecTunnels": {
            "get": {
              "tags": [
                "Ipsec Tunnels"
              ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    }
                ],
              "description": "Returns all ipsec tunnels",
              "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\NetworkInterfaces\\IpsecTunnelInterface::getIpsecTunnelProfiles",
              "responses": {
                "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
              }
            },
            "post": {
              "tags": [
                "Ipsec Tunnels"
              ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
              "description": "Insert an ipsec tunnel",
              "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\NetworkInterfaces\\IpsecTunnelInterface::addIpsecTunnelProfiles",
              "requestBody": {
                "description": "The ipsec tunnel you want to create",
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                        "type":"array",
                        "items":{
                      "properties": {
                          "uuid": {
                              "type": "string"
                          },
                          "name": {
                              "type": "string"
                          },
                          "description": {
                              "type": "string"
                          },
                          "checkit": {
                              "type": "integer",
                              "enum": [0,1],
                              "default": 0
                          },
                          "dummy": {
                              "type": "integer",
                              "enum": [0,1],
                              "default": 0
                          },
                          "invalid": {
                              "type": "integer",
                              "enum": [0,1],
                              "default": 0
                          },
                          "override": {
                              "type": "integer",
                              "enum": [0,1],
                              "default": 0
                          },
                          "source": {
                              "type": "string",
                              "example": "config.xml"
                          },
                          "vsys": {
                              "type": "string",
                              "example": "vsys1"
                          },
                        "template": {
                          "type": "integer"
                        },
                        "type_tunnel": {
                          "type": "string"
                        },
                        "address_type": {
                          "type": "string"
                        },
                        "anti_replay": {
                          "type": "boolean"
                        },
                        "copy-tos": {
                          "type": "boolean"
                        },
                        "gre_encapsulation": {
                          "type": "boolean"
                        },
                        "tunnel_monitor": {
                          "type": "boolean"
                        },
                        "destination_ip": {
                          "type": "string"
                        },
                        "local_spi": {
                          "type": "string"
                        },
                        "remote_spi": {
                          "type": "string"
                        },
                        "protocol": {
                          "type": "string"
                        },
                        "key_auth": {
                          "type": "string"
                        },
                        "key_encryption": {
                          "type": "string"
                        },
                        "local_address_ip": {
                          "type": "string"
                        },
                        "peer_ip_address": {
                          "type": "string"
                        },
                        "external_ca": {
                          "type": "boolean"
                        },
                        "certificate_profile": {
                          "type": "string"
                        },
                        "local_certificate": {
                          "type": "string"
                        },
                        "publish_connected_routes": {
                          "type": "string"
                        },
                        "portal_address": {
                          "type": "string"
                        },
                        "publish_routes": {
                          "type": "string"
                        },
                        "address": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "ike-gateway": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "ipsec-crypto-profile": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "monitor-profile": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "interface": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "authentication": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "encryption": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                    }
                  }
                }
              },
              "responses": {
                "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
              }
            },
            "put": {
              "tags": [
                "Ipsec Tunnels"
              ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
              "description": "Updates ipsec tunnel params",
              "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\NetworkInterfaces\\IpsecTunnelInterface::updateIpsecTunnelProfiles",
              "requestBody": {
                "description": "Ipsec Tunnel params to update",
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [{
                        "$ref": "#/components/schemas/updateSchema"
                      }]
                    }
                  }
                }
              },
              "responses":{
                "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
              }
            },
            "delete": {
              "tags": [
                "Ipsec Tunnels"
              ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
              "description": "Deletes an ipsec tunnel",
              "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\NetworkInterfaces\\IpsecTunnelInterface::deleteIpsecTunnelProfiles",
              "requestBody": {
                "description": "Ipsec tunnel id to delete",
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [{
                        "$ref": "#/components/schemas/deleteSchema"
                      }]
                    }
                  }
                }
              },
              "responses": {
                "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
              }
            }
        },
        "/api/v1/{projectId}/network/ipsecTunnels/{limit}": {
            "get": {
              "tags": [
                "Ipsec Tunnels"
              ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    },
                    {
                        "in": "path",
            "name": "limit",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Number of objects to show (can be 'all')"
                    }
                ],
              "description": "Returns all ipsec tunnels",
              "responses": {
                "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
              }
            }
        },
        "/api/v1/{projectId}/network/ikeCrypto": {
            "get": {
              "tags": [
                "Ike Crypto Profiles"
              ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    }
                ],
              "description": "Returns all ike crypto profiles",
              "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\NetworkInterfaces\\IkeCryptoInterface::getIkeCryptoProfiles",
              "responses": {
                "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
              }
            },
            "post": {
              "tags": [
                "Ike Crypto Profiles"
              ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
              "description": "Insert an ike crypto profile",
              "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\NetworkInterfaces\\IkeCryptoInterface::addIkeCryptoProfiles",
              "requestBody": {
                "description": "The ike crypto profile you want to create",
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                        "type":"array",
                        "items":{
                      "properties": {
                          "uuid": {
                              "type": "string"
                          },
                          "name": {
                              "type": "string"
                          },
                          "description": {
                              "type": "string"
                          },
                          "checkit": {
                              "type": "integer",
                              "enum": [0,1],
                              "default": 0
                          },
                          "dummy": {
                              "type": "integer",
                              "enum": [0,1],
                              "default": 0
                          },
                          "invalid": {
                              "type": "integer",
                              "enum": [0,1],
                              "default": 0
                          },
                          "override": {
                              "type": "integer",
                              "enum": [0,1],
                              "default": 0
                          },
                          "source": {
                              "type": "string",
                              "example": "config.xml"
                          },
                          "vsys": {
                              "type": "string",
                              "example": "vsys1"
                          },
                        "seconds": {
                          "type": "integer"
                        },
                        "minutes": {
                          "type": "integer"
                        },
                        "hours": {
                          "type": "integer"
                        },
                        "days": {
                          "type": "integer"
                        },
                        "authentication_multiple": {
                          "type": "integer"
                        },
                        "dh-group": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "authentication": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "encryption": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }

                    }
                  }
                }
              },
              "responses": {
                "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
              }
            },
            "put": {
              "tags": [
                "Ike Crypto Profiles"
              ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
              "description": "Updates ike crypto profile params",
              "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\NetworkInterfaces\\IkeCryptoInterface::updateIkeCryptoProfiles",
              "requestBody": {
                "description": "Ike Crypto params to update",
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [{
                        "$ref": "#/components/schemas/updateSchema"
                      }]
                    }
                  }
                }
              },
              "responses":{
                "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
              }
            },
            "delete": {
              "tags": [
                "Ike Crypto Profiles"
              ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
              "description": "Deletes an ike crypto profile",
              "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\NetworkInterfaces\\IkeCryptoInterface::deleteIkeCryptoProfiles",
              "requestBody": {
                "description": "Ike Crypto profile id to delete",
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [{
                        "$ref": "#/components/schemas/deleteSchema"
                      }]
                    }
                  }
                }
              },
              "responses": {
                "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
              }
            }
        },
        "/api/v1/{projectId}/network/ikeCrypto/{limit}": {
            "get": {
              "tags": [
                "Ike Crypto Profiles"
              ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    },
                    {
                        "in": "path",
            "name": "limit",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Number of objects to show (can be 'all')"
                    }
                ],
              "description": "Returns all ike crypto profiles",
              "responses": {
                "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
              }
            }
        },
        "/api/v1/{projectId}/network/ikeGateways": {
            "get": {
              "tags": [
                "Ike Gateway Profiles"
              ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    }
                ],
              "description": "Returns all ike gateway profiles",
              "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\NetworkInterfaces\\IkeCryptoInterface::getIkeGatewayProfiles",
              "responses": {
                "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
              }
            },
            "post": {
              "tags": [
                "Ike Gateway Profiles"
              ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
              "description": "Insert an ike gateway profile",
              "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\NetworkInterfaces\\IkeGatewayInterface::addIkeGatewayProfiles",
              "requestBody": {
                "description": "The ike gateway profile you want to create",
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                        "type":"array",
                        "items":{
                      "properties": {
                          "uuid": {
                              "type": "string"
                          },
                          "name": {
                              "type": "string"
                          },
                          "description": {
                              "type": "string"
                          },
                          "checkit": {
                              "type": "integer",
                              "enum": [0,1],
                              "default": 0
                          },
                          "dummy": {
                              "type": "integer",
                              "enum": [0,1],
                              "default": 0
                          },
                          "invalid": {
                              "type": "integer",
                              "enum": [0,1],
                              "default": 0
                          },
                          "override": {
                              "type": "integer",
                              "enum": [0,1],
                              "default": 0
                          },
                          "source": {
                              "type": "string",
                              "example": "config.xml"
                          },
                          "vsys": {
                              "type": "string",
                              "example": "vsys1"
                          },
                        "version": {
                          "type": "string"
                        },
                        "dpd_ikev1": {
                          "type": "boolean"
                        },
                        "ike_interval_ikev1": {
                          "type": "integer"
                        },
                        "retry_ikev1": {
                          "type": "integer"
                        },
                        "exchange_mode_ikev1": {
                          "type": "string"
                        },
                        "dpd_ikev2": {
                          "type": "boolean"
                        },
                        "ike_interval_ikev2": {
                          "type": "integer"
                        },
                        "require_cookie_ikev2": {
                          "type": "string"
                        },
                        "local_address_ip": {
                          "type": "string"
                        },
                        "type_authentication": {
                          "type": "string"
                        },
                        "pre_shared_key": {
                          "type": "string"
                        },
                        "allow_id_payload_mismatch": {
                          "type": "boolean"
                        },
                        "local_certificate": {
                          "type": "string"
                        },
                        "certificate_profile": {
                          "type": "string"
                        },
                        "strict_validation_revocation": {
                          "type": "boolean"
                        },
                        "hash_and_url": {
                          "type": "string"
                        },
                        "base_url": {
                          "type": "string"
                        },
                        "nat_traversal": {
                          "type": "boolean"
                        },
                        "passive_mode": {
                          "type": "boolean"
                        },
                        "fragmentation": {
                          "type": "boolean"
                        },
                        "peer_ip_type": {
                          "type": "string"
                        },
                        "peer_ip_address": {
                          "type": "string"
                        },
                        "local_id": {
                          "type": "string"
                        },
                        "local_id_type": {
                          "type": "string"
                        },
                        "peer_id": {
                          "type": "string"
                        },
                        "peer_id_type": {
                          "type": "string"
                        },
                        "peer_id_matching": {
                          "type": "boolean"
                        },
                        "address_type": {
                          "type": "string"
                        },
                        "address": {
                          "type": "string"

                        },
                        "interface": {
                            "type": "string"

                        },
                        "ike-crypto-profile-1": {
                            "type": "string"

                        },
                        "ike-crypto-profile-2": {
                            "type": "string"

                        }
                      }
                    }
                    }
                  }
                }
              },
              "responses": {
                "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
              }
            },
            "put": {
              "tags": [
                "Ike Gateway Profiles"
              ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
              "description": "Updates ike gateway profile params",
              "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\NetworkInterfaces\\IkeGatewayInterface::updateIkeGatewayProfiles",
              "requestBody": {
                "description": "Ike gateway profile params to update",
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [{
                        "$ref": "#/components/schemas/updateSchema"
                      }]
                    }
                  }
                }
              },
              "responses":{
                "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
              }
            },
            "delete": {
              "tags": [
                "Ike Gateway Profiles"
              ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
              "description": "Deletes an ike gateway profile",
              "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\NetworkInterfaces\\IkeCryptoInterface::deleteIkeGatewayProfiles",
              "requestBody": {
                "description": "Ike gateway profile id to delete",
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [{
                        "$ref": "#/components/schemas/deleteSchema"
                      }]
                    }
                  }
                }
              },
              "responses": {
                "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
              }
            }
        },
        "/api/v1/{projectId}/network/ikeGateways/{limit}": {
            "get": {
              "tags": [
                "Ike Gateway Profiles"
              ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    },
                    {
                        "in": "path",
            "name": "limit",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Number of objects to show (can be 'all')"
                    }
                ],
              "description": "Returns all ike gateway profiles",
              "responses": {
                "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
              }
            }
        },
        "/api/v1/{projectId}/network/ipsecCrypto": {
            "get": {
              "tags": [
                "Ipsec Crypto Profiles"
              ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    }
                ],
              "description": "Returns all ipsec crypto profiles",
              "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\NetworkInterfaces\\IpsecCryptoInterface::getIpsecCryptoProfiles",
              "responses": {
                "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
              }
            },
            "post": {
              "tags": [
                "Ipsec Crypto Profiles"
              ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
              "description": "Insert an ipsec crypto profile",
              "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\NetworkInterfaces\\IpsecCryptoInterface::addIpsecCryptoProfiles",
              "requestBody": {
                "description": "The ipsec crypto profile you want to create",
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                        "type":"array",
                        "items":{
                            "properties": {
                                "uuid": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "checkit": {
                                    "type": "integer",
                                    "enum": [0,1],
                                    "default": 0
                                },
                                "dummy": {
                                    "type": "integer",
                                    "enum": [0,1],
                                    "default": 0
                                },
                                "invalid": {
                                    "type": "integer",
                                    "enum": [0,1],
                                    "default": 0
                                },
                                "override": {
                                    "type": "integer",
                                    "enum": [0,1],
                                    "default": 0
                                },
                                "source": {
                                    "type": "string",
                                    "example": "config.xml"
                                },
                                "vsys": {
                                    "type": "string",
                                    "example": "vsys1"
                                },
                                "seconds": {
                                "type": "integer"
                                },
                                "minutes": {
                                "type": "integer"
                                },
                                "hours": {
                                "type": "integer"
                                },
                                "days": {
                                "type": "integer"
                                },
                                "kb": {
                                "type": "integer"
                                },
                                "mb": {
                                "type": "integer"
                                },
                                "gb": {
                                "type": "integer"
                                },
                                "tb": {
                                "type": "integer"
                                },
                                "protocol": {
                                "type": "string"
                                },
                                "dh-group": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                                },
                                "authentication": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                                },
                                "encryption": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                                }
                            },
                            "required": ["name","vsys","source"]
                        }
                    }
                  }
                }
              },
              "responses": {
                "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
              }
            },
            "put": {
              "tags": [
                "Ipsec Crypto Profiles"
              ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
              "description": "Updates ipsec crypto profile params",
              "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\NetworkInterfaces\\IpsecCryptoInterface::updateIpsecCryptoProfiles",
              "requestBody": {
                "description": "Ipsec Crypto params to update",
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [{
                        "$ref": "#/components/schemas/updateSchema"
                      }]
                    }
                  }
                }
              },
              "responses":{
                "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
              }
            },
            "delete": {
              "tags": [
                "Ipsec Crypto Profiles"
              ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
              "description": "Deletes an ipsec crypto profile",
              "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\NetworkInterfaces\\IpsecCryptoInterface::deleteIpsecCryptoProfiles",
              "requestBody": {
                "description": "Ipsec Crypto profile id to delete",
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [{
                        "$ref": "#/components/schemas/deleteSchema"
                      }]
                    }
                  }
                }
              },
              "responses": {
                "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
              }
            }
        },
        "/api/v1/{projectId}/network/ipsecCrypto/{limit}": {
            "get": {
              "tags": [
                "Ipsec Crypto Profiles"
              ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    },
                    {
                        "in": "path",
            "name": "limit",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Number of objects to show (can be 'all')"
                    }
                ],
              "description": "Returns all ipsec crypto profiles",
              "responses": {
                "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
              }
            }
        },
        "/api/v1/{projectId}/network/monitor": {
            "get": {
              "tags": [
                "Monitor Profiles"
              ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    }
                ],
              "description": "Returns all monitor profiles",
              "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\NetworkInterfaces\\MonitorInterface::getMonitorProfiles",
              "responses": {
                "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
              }
            },
            "post": {
              "tags": [
                "Monitor Profiles"
              ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
              "description": "Insert a monitor profile",
              "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\NetworkInterfaces\\MonitorInterface::addMonitorProfiles",
              "requestBody": {
                "description": "The monitor profile you want to create",
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "properties": {
                          "uuid": {
                              "type": "string"
                          },
                          "name": {
                              "type": "string"
                          },
                          "description": {
                              "type": "string"
                          },
                          "checkit": {
                              "type": "integer",
                              "enum": [0,1],
                              "default": 0
                          },
                          "dummy": {
                              "type": "integer",
                              "enum": [0,1],
                              "default": 0
                          },
                          "invalid": {
                              "type": "integer",
                              "enum": [0,1],
                              "default": 0
                          },
                          "override": {
                              "type": "integer",
                              "enum": [0,1],
                              "default": 0
                          },
                          "source": {
                              "type": "string",
                              "example": "config.xml"
                          },
                          "vsys": {
                              "type": "string",
                              "example": "vsys1"
                          },
                        "action": {
                          "type": "string"
                        },
                        "interval": {
                          "type": "integer"
                        },
                        "threshold": {
                          "type": "integer"
                        }
                      },
                      "type": "object",
                        "required": ["name","vsys","source"]
                    }
                  }
                }
              },
              "responses": {
                "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
              }
            },
            "put": {
              "tags": [
                "Monitor Profiles"
              ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
              "description": "Updates monitor profile params",
              "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\NetworkInterfaces\\MonitorInterface::updateMonitorProfiles",
              "requestBody": {
                "description": "Monitor profile params to update",
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [{
                        "$ref": "#/components/schemas/updateSchema"
                      }]
                    }
                  }
                }
              },
              "responses":{
                "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
              }
            },
            "delete": {
              "tags": [
                "Monitor Profiles"
              ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
              "description": "Deletes a monitor profile",
              "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\NetworkInterfaces\\MonitorInterface::deleteMonitorProfiles",
              "requestBody": {
                "description": "Monitor profile id to delete",
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [{
                        "$ref": "#/components/schemas/deleteSchema"
                      }]
                    }
                  }
                }
              },
              "responses": {
                "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
              }
            }
        },
        "/api/v1/{projectId}/network/monitor/{limit}": {
            "get": {
              "tags": [
                "Monitor Profiles"
              ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    },
                    {
                        "in": "path",
            "name": "limit",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Number of objects to show (can be 'all')"
                    }
                ],
              "description": "Returns all monitor profiles",
              "responses": {
                "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
              }
            }
        },
        "/api/v1/{projectId}/network/interfaceManagement": {
            "get": {
              "tags": [
                "Interface Mgmt Profiles"
              ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    }
                ],
              "description": "Returns all interface management profiles",
              "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\NetworkInterfaces\\InterfaceManagementInterface::getInterfaceManagementProfiles",
              "responses": {
                "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
              }
            },
            "post": {
              "tags": [
                "Interface Mgmt Profiles"
              ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
              "description": "Insert a interface management profile",
              "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\NetworkInterfaces\\InterfaceManagementInterface::addInterfaceManagementProfiles",
              "requestBody": {
                "description": "The interface management profile you want to create",
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "properties": {
                          "uuid": {
                              "type": "string"
                          },
                          "name": {
                              "type": "string"
                          },
                          "description": {
                              "type": "string"
                          },
                          "checkit": {
                              "type": "integer",
                              "enum": [0,1],
                              "default": 0
                          },
                          "dummy": {
                              "type": "integer",
                              "enum": [0,1],
                              "default": 0
                          },
                          "invalid": {
                              "type": "integer",
                              "enum": [0,1],
                              "default": 0
                          },
                          "override": {
                              "type": "integer",
                              "enum": [0,1],
                              "default": 0
                          },
                          "source": {
                              "type": "string",
                              "example": "config.xml"
                          },
                          "vsys": {
                              "type": "string",
                              "example": "vsys1"
                          },
                        "permitted_ip": {
                          "type": "string"
                        },
                        "http": {
                          "type": "boolean"
                        },
                        "https": {
                          "type": "boolean"
                        },
                        "http_ocsp": {
                          "type": "boolean"
                        },
                        "ssh": {
                          "type": "boolean"
                        },
                        "snmp": {
                          "type": "boolean"
                        },
                        "userid_service": {
                          "type": "boolean"
                        },
                        "userid_syslog_listener_ssl": {
                          "type": "boolean"
                        },
                        "userid_syslog_listener_udp": {
                          "type": "boolean"
                        },
                        "ping": {
                          "type": "boolean"
                        },
                        "response_pages": {
                          "type": "boolean"
                        },
                        "telnet": {
                          "type": "boolean"
                        }
                      },
                        "required": ["name","vsys","source"],
                      "type": "object"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
              }
            },
            "put": {
              "tags": [
                "Interface Mgmt Profiles"
              ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
              "description": "Updates interface management profile params",
              "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\NetworkInterfaces\\InterfaceManagementInterface::updateInterfaceManagementProfiles",
              "requestBody": {
                "description": "Interface Management profile params to update",
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [{
                        "$ref": "#/components/schemas/updateSchema"
                      }]
                    }
                  }
                }
              },
              "responses":{
                "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
              }
            },
            "delete": {
              "tags": [
                "Interface Mgmt Profiles"
              ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
              "description": "Deletes an interface management profile",
              "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\NetworkInterfaces\\InterfaceManagementInterface::deleteInterfaceManagementProfiles",
              "requestBody": {
                "description": "Interface management profile id to delete",
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [{
                        "$ref": "#/components/schemas/deleteSchema"
                      }]
                    }
                  }
                }
              },
              "responses": {
                "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
              }
            }
        },
        "/api/v1/{projectId}/network/interfaceManagement/{limit}": {
            "get": {
              "tags": [
                "Interface Mgmt Profiles"
              ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    },
                    {
                        "in": "path",
            "name": "limit",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Number of objects to show (can be 'all')"
                    }
                ],
              "description": "Returns all interface management profiles",
              "responses": {
                "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
              }
            }
        },
        "/api/v1/{projectId}/network/globalProtectIpsecCrypto": {
            "get": {
              "tags": [
                "GP Ipsec Crypto Profiles"
              ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    }
                ],
              "description": "Returns all GP ipsec crypto profiles",
              "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\NetworkInterfaces\\GpIpsecCryptoInterface::getGpIpsecCryptoProfiles",
              "responses": {
                "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
              }
            },
            "post": {
              "tags": [
                "GP Ipsec Crypto Profiles"
              ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
              "description": "Insert a GP Ipsec Crypto profile",
              "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\NetworkInterfaces\\GpIpsecCryptoInterface::addGpIpsecCryptoProfiles",
              "requestBody": {
                "description": "The GP Ipsec Crypto Profile you want to create",
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                        "type": "array",
                        "items":{
                            "properties": {
                                "uuid": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "checkit": {
                                    "type": "integer",
                                    "enum": [0,1],
                                    "default": 0
                                },
                                "dummy": {
                                    "type": "integer",
                                    "enum": [0,1],
                                    "default": 0
                                },
                                "invalid": {
                                    "type": "integer",
                                    "enum": [0,1],
                                    "default": 0
                                },
                                "override": {
                                    "type": "integer",
                                    "enum": [0,1],
                                    "default": 0
                                },
                                "source": {
                                    "type": "string",
                                    "example": "config.xml"
                                },
                                "vsys": {
                                    "type": "string",
                                    "example": "vsys1"
                                },
                                "authentication": {
                                    "type": "array",
                                    "items": {
                                    "type": "string"
                                    }
                                },
                                "encryption": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            },
                            "required": ["name","vsys","source"]
                        }
                    }
                  }
                }
              },
              "responses": {
                "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
              }
            },
            "put": {
              "tags": [
                "GP Ipsec Crypto Profiles"
              ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
              "description": "Updates Gp ipsec crypto profile params",
              "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\NetworkInterfaces\\GpIpsecCryptoInterface::updateGpIpsecCryptoProfiles",
              "requestBody": {
                "description": "GP Ipsec crypto profile params to update",
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [{
                        "$ref": "#/components/schemas/updateSchema"
                      }]
                    }
                  }
                }
              },
              "responses":{
                "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
              }
            },
            "delete": {
              "tags": [
                "GP Ipsec Crypto Profiles"
              ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
              "description": "Deletes an interface management profile",
              "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\NetworkInterfaces\\GpIpsecCryptoInterface::deleteGpIpsecCryptoProfiles",
              "requestBody": {
                "description": "Gp Ipsec Crypto profile id to delete",
                "content": {
                  "application/json": {
                    "schema": {
                      "allOf": [{
                        "$ref": "#/components/schemas/deleteSchema"
                      }]
                    }
                  }
                }
              },
              "responses": {
                "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
              }
            }
        },
        "/api/v1/{projectId}/network/globalProtectIpsecCrypto/{limit}": {
            "get": {
              "tags": [
                "GP Ipsec Crypto Profiles"
              ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    },
                    {
                        "in": "path",
            "name": "limit",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Number of objects to show (can be 'all')"
                    }
                ],
              "description": "Returns all GP ipsec crypto profiles",
              "responses": {
                "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
              }
            }
        },

        "/api/v1/{projectId}/network/zoneProtectionProfile": {
            "post": {
                "tags": [
                    "Zone Protection Profile"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Insert a zone protection profile",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\NetworkInterfaces\\ZoneProtectionInterface::addZoneProtectionProfiles",
                "requestBody": {
                    "description": "The zone protection profile you want to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items":{
                                    "type": "object",
                                    "properties": {
                                        "uuid": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "checkit": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "dummy": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "invalid": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "override": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "source": {
                                            "type": "string",
                                            "example": "config.xml"
                                        },
                                        "vsys": {
                                            "type": "string",
                                            "example": "vsys1"
                                        },
                                        "flood":{
                                            "type":"string"
                                        },
                                        "ipv6": {
                                            "type": "string"
                                        },
                                        "protocol_protection": {
                                            "type": "string"
                                        },
                                        "scan": {
                                            "type": "string"
                                        },
                                        "scan_white_list": {
                                            "type": "string"
                                        },
                                        "strip_mptcp_option": {
                                            "type": "string"
                                        },
                                        "tcp_reject_non_syn": {
                                            "type": "string"
                                        },
                                        "asymetric_path": {
                                            "type": "string"
                                        },
                                        "discard_ip_frag": {
                                            "type": "boolean"
                                        },
                                        "strict_ip_check": {
                                            "type": "boolean"
                                        },
                                        "discard_icmp_frag": {
                                            "type": "boolean"
                                        },
                                        "discard_icmp_large_packet": {
                                            "type": "boolean"
                                        },
                                        "remove_tcp_timestamp": {
                                            "type": "boolean"
                                        },
                                        "supress_icmp_timeexceeded": {
                                            "type": "boolean"
                                        },
                                        "supress_icmp_needfrag": {
                                            "type": "boolean"
                                        },
                                        "discard_icmp_error": {
                                            "type": "boolean"
                                        },
                                        "discard_ip_spoof": {
                                            "type": "boolean"
                                        },
                                        "discard_strict_source_routing": {
                                            "type": "boolean"
                                        },
                                        "discard_security": {
                                            "type": "boolean"
                                        },
                                        "discard_loose_source_routing": {
                                            "type": "boolean"
                                        },
                                        "discard_stream_id": {
                                            "type": "boolean"
                                        },
                                        "discard_timestamp": {
                                            "type": "boolean"
                                        },
                                        "discard_unknown_option": {
                                            "type": "boolean"
                                        },
                                        "discard_record_route": {
                                            "type": "boolean"
                                        },
                                        "discard_tcp_split_handshake": {
                                            "type": "boolean"
                                        },
                                        "discard_malformed_option": {
                                            "type": "boolean"
                                        },
                                        "discard_overlapping_tcp_segment_mismatch": {
                                            "type": "boolean"
                                        },
                                        "strip_tcp_fast_open_and_data": {
                                            "type": "boolean"
                                        },
                                        "discard_icmp_ping_zero_id": {
                                            "type": "boolean"
                                        }
                                    },
                                    "required": ["name","vsys","source"]
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "put": {
                "tags": [
                    "Zone Protection Profile"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Updates an address params",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\NetworkInterfaces\\ZoneProtectionInterface::updateZoneProtectionProfiles",
                "requestBody": {
                    "description": "Zone protection profile params to update",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/updateSchema"
                                }]
                            }
                        }
                    }
                },
                "responses":{
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Zone Protection Profile"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Deletes a zone protection profile",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\NetworkInterfaces\\ZoneProtectionInterface::deleteZoneProtectionProfiles",
                "requestBody": {
                    "description": "Zone protection profile id to delete",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/deleteSchema"
                                }]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/network/zoneProtectionProfile/{limit}": {
            "get": {
                "tags": [
                    "Zone Protection Profile"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    },
                    {
                        "in": "path",
            "name": "limit",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Number of objects to show (can be 'all')"
                    }
                ],
                "description": "Returns all zone protection profiles",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\NetworkInterfaces\\ZoneProtectionInterface::getZoneProtectionProfiles",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/network/lldpProfile": {
            "post": {
                "tags": [
                    "Lldp Profile"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Insert a lldp profile",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\NetworkInterfaces\\LldpInterface::addLldpProfiles",
                "requestBody": {
                    "description": "The lldp profile you want to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items":{
                                    "type": "object",
                                    "properties": {
                                        "uuid": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "checkit": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "dummy": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "invalid": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "override": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "source": {
                                            "type": "string",
                                            "example": "config.xml"
                                        },
                                        "vsys": {
                                            "type": "string",
                                            "example": "vsys1"
                                        },
                                        "mode":{
                                            "type":"string"
                                        },
                                        "management_address": {
                                            "type": "string"
                                        },
                                        "management_address_enabled": {
                                            "type": "boolean"
                                        },
                                        "port_description": {
                                            "type": "boolean"
                                        },
                                        "system_name": {
                                            "type": "boolean"
                                        },
                                        "system_description": {
                                            "type": "boolean"
                                        },
                                        "system_capabilities": {
                                            "type": "boolean"
                                        },
                                        "snmp_syslog_notification": {
                                            "type": "boolean"
                                        }
                                    },
                                    "required": ["name","vsys","source"]
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "put": {
                "tags": [
                    "Lldp Profile"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Updates an lldp params",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\NetworkInterfaces\\LldpInterface::updateLldpProfiles",
                "requestBody": {
                    "description": "Lldp profile params to update",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/updateSchema"
                                }]
                            }
                        }
                    }
                },
                "responses":{
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Lldp Profile"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Deletes a lldp profile",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\NetworkInterfaces\\LldpInterface::deleteLldpProfiles",
                "requestBody": {
                    "description": "Lldp profile id to delete",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/deleteSchema"
                                }]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/network/lldpProfile/{limit}": {
            "get": {
                "tags": [
                    "Lldp Profile"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    },
                    {
                        "in": "path",
            "name": "limit",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Number of objects to show (can be 'all')"
                    }
                ],
                "description": "Returns all lldp profiles",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\NetworkInterfaces\\LldpInterface::getLldpProfiles",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/network/qosProfile": {
            "post": {
                "tags": [
                    "Qos Profile"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Insert a qos profile",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\NetworkInterfaces\\QosInterface::addQosProfiles",
                "requestBody": {
                    "description": "The qos profile you want to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items":{
                                    "type": "object",
                                    "properties": {
                                        "uuid": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "checkit": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "dummy": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "invalid": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "override": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "source": {
                                            "type": "string",
                                            "example": "config.xml"
                                        },
                                        "vsys": {
                                            "type": "string",
                                            "example": "vsys1"
                                        },
                                        "class_bandwidth_type":{
                                            "type":"string"
                                        },
                                        "class": {
                                            "type": "string"
                                        },
                                        "egress_max": {
                                            "type": "integer"
                                        },
                                        "egress_guaranteed": {
                                            "type": "integer"
                                        }
                                    },
                                    "required": ["name","vsys","source"]
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "put": {
                "tags": [
                    "Qos Profile"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Updates an qos params",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\NetworkInterfaces\\QosInterface::updateQosProfiles",
                "requestBody": {
                    "description": "Qos profile params to update",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/updateSchema"
                                }]
                            }
                        }
                    }
                },
                "responses":{
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Qos Profile"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Deletes a qos profile",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\NetworkInterfaces\\QosInterface::deleteQosProfiles",
                "requestBody": {
                    "description": "Qos profile id to delete",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/deleteSchema"
                                }]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/network/qosProfile/{limit}": {
            "get": {
                "tags": [
                    "Qos Profile"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    },
                    {
                        "in": "path",
            "name": "limit",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Number of objects to show (can be 'all')"
                    }
                ],
                "description": "Returns all qos profiles",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\NetworkInterfaces\\QosInterface::getQosProfiles",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/network/bfdProfile": {
            "post": {
                "tags": [
                    "Bfd Profile"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Insert a bfd profile",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\NetworkInterfaces\\BfdInterface::addBfdProfiles",
                "requestBody": {
                    "description": "The bfd profile you want to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items":{
                                    "type": "object",
                                    "properties": {
                                        "uuid": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "checkit": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "dummy": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "invalid": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "override": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "source": {
                                            "type": "string",
                                            "example": "config.xml"
                                        },
                                        "vsys": {
                                            "type": "string",
                                            "example": "vsys1"
                                        },
                                        "mode":{
                                            "type":"string"
                                        },
                                        "min_tx_interval": {
                                            "type": "integer"
                                        },
                                        "min_rx_interval": {
                                            "type": "integer"
                                        },
                                        "detection_multiplier": {
                                            "type": "integer"
                                        },
                                        "hold_time": {
                                            "type": "integer"
                                        },
                                        "min_received_ttl": {
                                            "type": "integer"
                                        }
                                    },
                                    "required": ["name","vsys","source"]
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "put": {
                "tags": [
                    "Bfd Profile"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Updates an bfd params",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\NetworkInterfaces\\BfdInterface::updateBfdProfiles",
                "requestBody": {
                    "description": "Bfd profile params to update",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/updateSchema"
                                }]
                            }
                        }
                    }
                },
                "responses":{
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Bfd Profile"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Deletes a bfd profile",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\NetworkInterfaces\\BfdInterface::deleteBfdProfiles",
                "requestBody": {
                    "description": "Bfd profile id to delete",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/deleteSchema"
                                }]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/network/bfdProfile/{limit}": {
            "get": {
                "tags": [
                    "Bfd Profile"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    },
                    {
                        "in": "path",
            "name": "limit",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Number of objects to show (can be 'all')"
                    }
                ],
                "description": "Returns all bfd profiles",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\NetworkInterfaces\\BfdInterface::getBfdProfiles",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },

        "/api/v1/{projectId}/policies/security": {
            "get": {
                "tags": [
                    "Security Rules"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    }
                ],
                "description": "Returns all security rules",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\PolicyInterfaces\\SecurityRuleInterface::getSecurityRules",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "post": {
                "tags": [
                    "Security Rules"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Insert a security rule",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\PolicyInterfaces\\SecurityRuleInterface::addSecurityRules",
                "requestBody": {
                    "description": "The security rule you want to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items":{
                                    "type": "object",
                                    "properties": {
                                        "uuid": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "checkit": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "dummy": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "invalid": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "override": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "source": {
                                            "type": "string",
                                            "example": "config.xml"
                                        },
                                        "vsys": {
                                            "type": "string",
                                            "example": "vsys1"
                                        },
                                        "position":{
                                            "type":"integer"
                                        },
                                        "negate_source": {
                                            "type": "boolean"
                                        },
                                        "negate_destination": {
                                            "type": "boolean"
                                        },
                                        "action": {
                                            "type": "string"
                                        },
                                        "disabled": {
                                            "type": "boolean"
                                        },
                                        "log_start": {
                                            "type": "boolean"
                                        },
                                        "log_end": {
                                            "type": "boolean"
                                        },
                                        "dsri": {
                                            "type": "boolean"
                                        },
                                        "target": {
                                            "type": "string"
                                        },
                                        "qos": {
                                            "type": "string"
                                        },
                                        "qos_value": {
                                            "type": "string"
                                        },
                                        "profile_type": {
                                            "type": "string"
                                        },
                                        "preorpost": {
                                            "type": "boolean"
                                        },
                                        "blocked": {
                                            "type": "boolean"
                                        },
                                        "rule_type": {
                                            "type": "string"
                                        },
                                        "icmp_unreachable": {
                                            "type": "boolean"
                                        },
                                        "target_negate": {
                                            "type": "boolean"
                                        },
                                        "layer": {
                                            "type": "integer"
                                        },
                                        "log_forwarding": {
                                            "type": "string"
                                        },
                                        "schedule": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "zone-to": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "zone-from": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "source-address": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "destination-address": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "application": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "service": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "category": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "users": {
                                            "type": "string",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "hip-profiles": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "required": ["name","vsys","source"]
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "put": {
                "tags": [
                    "Security Rules"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Updates an address params",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\PolicyInterfaces\\SecurityRuleInterface::updateSecurityRules",
                "requestBody": {
                    "description": "security rule params to update",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/updateSchema"
                                }]
                            }
                        }
                    }
                },
                "responses":{
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Security Rules"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Deletes a security rule",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\PolicyInterfaces\\SecurityRuleInterface::deleteSecurityRules",
                "requestBody": {
                    "description": "Security Rule id to delete",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/deleteSchema"
                                }]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/policies/security/{limit}": {
            "get": {
                "tags": [
                    "Security Rules"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    },
                    {
                        "in": "path",
            "name": "limit",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Number of objects to show (can be 'all')"
                    }
                ],
                "description": "Returns all security rules",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/policies/nat": {
            "get": {
                "tags": [
                    "Nat Rules"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    }
                ],
                "description": "Returns all nat rules",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\PolicyInterfaces\\NatRuleInterface::getNatRules",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "post": {
                "tags": [
                    "Nat Rules"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Insert a nat rule",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\PolicyInterfaces\\NatInterface::addNatRules",
                "requestBody": {
                    "description": "The nat rules you want to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items":{
                                    "type": "object",
                                    "properties": {
                                        "uuid": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "checkit": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "dummy": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "invalid": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "override": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "source": {
                                            "type": "string",
                                            "example": "config.xml"
                                        },
                                        "vsys": {
                                            "type": "string",
                                            "example": "vsys1"
                                        },
                                        "target": {
                                            "type": "string"
                                        },
                                        "target_negate": {
                                            "type": "string"
                                        },
                                        "disabled": {
                                            "type": "boolean"
                                        },
                                        "is_dat": {
                                            "type": "integer"
                                        },
                                        "destination_translation_type": {
                                            "type": "string"
                                        },
                                        "destination_translation_port": {
                                            "type": "integer"
                                        },
                                        "source_translation_bidirectional": {
                                            "type": "boolean"
                                        },
                                        "source_translation_type": {
                                            "type": "string"
                                        },
                                        "source_translation_address_type": {
                                            "type": "string"
                                        },
                                        "devicegroup": {
                                            "type": "string"
                                        },
                                        "active_active_device_binding": {
                                            "type": "string"
                                        },
                                        "nat_type": {
                                            "type": "string"
                                        },
                                        "fallback_type": {
                                            "type": "string"
                                        },
                                        "destination_interface": {
                                            "type": "string"
                                        },
                                        "source_translated_ip_address": {
                                            "type": "string"
                                        },

                                        "tag": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "zone-from": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "zone-to": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "source-address": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "destination-address": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "service": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "source_translated_interface": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },

                                        "source_translated_address": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "destination_translated_address": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "source_address_fallback": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "source_interface_fallback": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "required": ["name","vsys","source"]
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "put": {
                "tags": [
                    "Nat Rules"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Updates nat rules params",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\PolicyInterfaces\\NatInterface::updateNatRules",
                "requestBody": {
                    "description": "Nat rule params to update",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/updateSchema"
                                }]
                            }
                        }
                    }
                },
                "responses":{
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Nat Rules"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Deletes a nat rule",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\PolicyInterfaces\\NatInterface::deleteNatRules",
                "requestBody": {
                    "description": "Nat rule id to delete",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/deleteSchema"
                                }]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/policies/nat/{limit}": {
            "get": {
                "tags": [
                    "Nat Rules"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    },
                    {
                        "in": "path",
            "name": "limit",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Number of objects to show (can be 'all')"
                    }
                ],
                "description": "Returns all nat rules",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/policies/applicationOverride": {
            "get": {
                "tags": [
                    "Application Override Rules"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    }
                ],
                "description": "Returns all nat rules",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\PolicyInterfaces\\ApplicationOverrideInterface::getApplicationOverrideRules",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "post": {
                "tags": [
                    "Application Override Rules"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Insert a nat rule",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\PolicyInterfaces\\ApplicationOverrideInterface::addApplicationOverrideRules",
                "requestBody": {
                    "description": "The nat rules you want to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items":{
                                    "type": "object",
                                    "properties": {
                                        "uuid": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "checkit": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "dummy": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "invalid": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "override": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "source": {
                                            "type": "string",
                                            "example": "config.xml"
                                        },
                                        "vsys": {
                                            "type": "string",
                                            "example": "vsys1"
                                        },
                                        "target": {
                                            "type": "string"
                                        },
                                        "target_negate": {
                                            "type": "boolean"
                                        },
                                        "disabled": {
                                            "type": "boolean"
                                        },
                                        "negate_source": {
                                            "type": "boolean"
                                        },
                                        "negate_destination": {
                                            "type": "boolean"
                                        },
                                        "protocol": {
                                            "type": "string"
                                        },
                                        "port": {
                                            "type": "string"
                                        },
                                        "preorpost": {
                                            "type": "integer"
                                        },
                                        "devicegroup": {
                                            "type": "string"
                                        },
                                        "tag": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "application": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "zone-from": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "zone-to": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "source-address": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "destination-address": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "required": ["name","vsys","source"]
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "put": {
                "tags": [
                    "Application Override Rules"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Updates application overrode rules params",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\PolicyInterfaces\\ApplicationOverrideInterface::updateApplicationOverrideRules",
                "requestBody": {
                    "description": "Nat rule params to update",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/updateSchema"
                                }]
                            }
                        }
                    }
                },
                "responses":{
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Application Override Rules"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Deletes a application override rule",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\PolicyInterfaces\\ApplicationOverrideInterface::deleteApplicationOverrideRules",
                "requestBody": {
                    "description": "Nat rule id to delete",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/deleteSchema"
                                }]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/policies/applicationOverride/{limit}": {
            "get": {
                "tags": [
                    "Application Override Rules"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    },
                    {
                        "in": "path",
            "name": "limit",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Number of objects to show (can be 'all')"
                    }
                ],
                "description": "Returns all nat rules",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/policies/qos": {
            "get": {
                "tags": [
                    "QoS Rules"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    }
                ],
                "description": "Returns all qos rules",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\PolicyInterfaces\\QoSRuleInterface::getQoSRules",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "post": {
                "tags": [
                    "QoS Rules"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Insert a nat rule",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\PolicyInterfaces\\QoSRuleInterface::addQoSRules",
                "requestBody": {
                    "description": "The qos rules you want to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items":{
                                    "type": "object",
                                    "properties": {
                                        "uuid": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "checkit": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "dummy": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "invalid": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "override": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "source": {
                                            "type": "string",
                                            "example": "config.xml"
                                        },
                                        "vsys": {
                                            "type": "string",
                                            "example": "vsys1"
                                        },
                                        "target": {
                                            "type": "string"
                                        },
                                        "target_negate": {
                                            "type": "boolean"
                                        },
                                        "disabled": {
                                            "type": "boolean"
                                        },
                                        "negate_source": {
                                            "type": "boolean"
                                        },
                                        "negate_destination": {
                                            "type": "boolean"
                                        },
                                        "action": {
                                            "type": "integer"
                                        },
                                        "codepoints": {
                                            "type": "string"
                                        },
                                        "preorpost": {
                                            "type": "integer"
                                        },
                                        "blocked": {
                                            "type": "boolean"
                                        },
                                        "tag": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "application": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "zone-from": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "zone-to": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "source-address": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "destination-address": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "service": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },"users": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },"category": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },"schedule": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "required": ["name","vsys","source"]
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "put": {
                "tags": [
                    "QoS Rules"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Updates qos rules params",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\PolicyInterfaces\\QoSRuleInterface::updateQoSRules",
                "requestBody": {
                    "description": "QoS rule params to update",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/updateSchema"
                                }]
                            }
                        }
                    }
                },
                "responses":{
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "delete": {
                "tags": [
                    "QoS Rules"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Deletes a QoS rule",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\PolicyInterfaces\\QoSRuleInterface::deleteQoSRules",
                "requestBody": {
                    "description": "QoS rule id to delete",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/deleteSchema"
                                }]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/policies/qos/{limit}": {
            "get": {
                "tags": [
                    "QoS Rules"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    },
                    {
                        "in": "path",
            "name": "limit",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Number of objects to show (can be 'all')"
                    }
                ],
                "description": "Returns all qos rules",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/policies/policyBasedForwarding": {
            "get": {
                "tags": [
                    "Policy Based Forwarding Rules"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    }
                ],
                "description": "Returns all qos rules",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\PolicyInterfaces\\PbfRuleInterface::getPbfRules",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "post": {
                "tags": [
                    "Policy Based Forwarding Rules"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Insert a pbf rule",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\PolicyInterfaces\\PbfRuleInterface::addPbfRules",
                "requestBody": {
                    "description": "The pbf rules you want to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items":{
                                    "type": "object",
                                    "properties": {
                                        "uuid": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "checkit": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "dummy": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "invalid": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "override": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "source": {
                                            "type": "string",
                                            "example": "config.xml"
                                        },
                                        "vsys": {
                                            "type": "string",
                                            "example": "vsys1"
                                        },
                                        "target": {
                                            "type": "string"
                                        },
                                        "target_negate": {
                                            "type": "boolean"
                                        },
                                        "disabled": {
                                            "type": "boolean"
                                        },
                                        "negate_source": {
                                            "type": "boolean"
                                        },
                                        "negate_destination": {
                                            "type": "boolean"
                                        },
                                        "action": {
                                            "type": "string"
                                        },
                                        "from_type": {
                                            "type": "string"
                                        },
                                        "preorpost": {
                                            "type": "integer"
                                        },
                                        "blocked": {
                                            "type": "boolean"
                                        },
                                        "enforce_symmetric_return": {
                                            "type": "string"
                                        },
                                        "devicegroup": {
                                            "type": "string"
                                        },
                                        "monitor_profile": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "monitor_disable_if_unreachable": {
                                            "type": "boolean"
                                        },
                                         "monitor_ipaddress": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "nexthop": {
                                            "type": "string"
                                        },
                                        "tag": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "application": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "zone": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "source-address": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "destination-address": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "egress_interface": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "source-interface": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "schedule": {
                                            "type": "string"
                                        }
                                    },
                                    "required": ["name","vsys","source"]
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "put": {
                "tags": [
                    "Policy Based Forwarding Rules"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Updates qos rules params",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\PolicyInterfaces\\PbfRuleInterface::updatePbfRules",
                "requestBody": {
                    "description": "Pbf rule params to update",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/updateSchema"
                                }]
                            }
                        }
                    }
                },
                "responses":{
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Policy Based Forwarding Rules"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Deletes a Pbf rule",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\PolicyInterfaces\\PbfRuleInterface::deletePbfRules",
                "requestBody": {
                    "description": "Pbf rule id to delete",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/deleteSchema"
                                }]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/policies/policyBasedForwarding/{limit}": {
            "get": {
                "tags": [
                    "Policy Based Forwarding Rules"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    },
                    {
                        "in": "path",
            "name": "limit",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Number of objects to show (can be 'all')"
                    }
                ],
                "description": "Returns all qos rules",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/policies/decryption": {
            "get": {
                "tags": [
                    "Decryption Rules"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    }
                ],
                "description": "Returns all qos rules",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\PolicyInterfaces\\DecryptionRuleInterface::getDecryptionRules",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "post": {
                "tags": [
                    "Decryption Rules"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Insert a decryption rule",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\PolicyInterfaces\\DecryptionRuleInterface::addDecryptionRules",
                "requestBody": {
                    "description": "The decryption rules you want to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items":{
                                    "type": "object",
                                    "properties": {
                                        "uuid": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "checkit": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "dummy": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "invalid": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "override": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "source": {
                                            "type": "string",
                                            "example": "config.xml"
                                        },
                                        "vsys": {
                                            "type": "string",
                                            "example": "vsys1"
                                        },
                                        "target": {
                                            "type": "string"
                                        },
                                        "target_negate": {
                                            "type": "boolean"
                                        },
                                        "disabled": {
                                            "type": "boolean"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "negate_source": {
                                            "type": "boolean"
                                        },
                                        "negate_destination": {
                                            "type": "boolean"
                                        },
                                        "action": {
                                            "type": "string"
                                        },
                                        "certificate": {
                                            "type": "string"
                                        },
                                        "profile": {
                                            "type": "string"
                                        },
                                        "preorpost": {
                                            "type": "integer"
                                        },
                                        "blocked": {
                                            "type": "boolean"
                                        },
                                        "devicegroup": {
                                            "type": "string"
                                        },
                                        "tag": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "zone_from": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "zone_to": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "source_address": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "destination_address": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "log_forwarding": {
                                            "type": "string"
                                        },
                                        "category": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "service": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "users": {
                                            "type": "string"
                                        }
                                    },
                                    "required": ["name","vsys","source"]
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "put": {
                "tags": [
                    "Decryption Rules"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Updates decryption rules params",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\PolicyInterfaces\\DecryptionRuleInterface::updateDecryptionRules",
                "requestBody": {
                    "description": "Decryption rule params to update",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/updateSchema"
                                }]
                            }
                        }
                    }
                },
                "responses":{
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Decryption Rules"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Deletes a decryption rule",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\PolicyInterfaces\\DecryptionRuleInterface::deleteDecryptionRules",
                "requestBody": {
                    "description": "Decryption rule id to delete",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/deleteSchema"
                                }]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/policies/decryption/{limit}": {
            "get": {
                "tags": [
                    "Decryption Rules"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    },
                    {
                        "in": "path",
            "name": "limit",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Number of objects to show (can be 'all')"
                    }
                ],
                "description": "Returns all qos rules",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/policies/tunnelInspection": {
            "get": {
                "tags": [
                    "Tunnel Inspection Rules"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    }
                ],
                "description": "Returns all qos rules",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\PolicyInterfaces\\TunnelInspectionRuleInterface::getTunnelInspectionRules",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "post": {
                "tags": [
                    "Tunnel Inspection Rules"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Insert a tunnel inspection rule",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\PolicyInterfaces\\TunnelInspectionInterface::addTunnelInspectionRules",
                "requestBody": {
                    "description": "The tunnel inspection rules you want to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items":{
                                    "type": "object",
                                    "properties": {
                                        "uuid": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "checkit": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "dummy": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "invalid": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "override": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "source": {
                                            "type": "string",
                                            "example": "config.xml"
                                        },
                                        "vsys": {
                                            "type": "string",
                                            "example": "vsys1"
                                        },
                                        "target": {
                                            "type": "string"
                                        },
                                        "target_negate": {
                                            "type": "boolean"
                                        },
                                        "disabled": {
                                            "type": "boolean"
                                        },
                                        "negate_source": {
                                            "type": "boolean"
                                        },
                                        "negate_destination": {
                                            "type": "boolean"
                                        },
                                        "action": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "preorpost": {
                                            "type": "integer"
                                        },
                                        "tag": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "application": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "zone-from": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "zone-to": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "source-address": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "destination-address": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "users": {
                                            "type": "string"
                                        }
                                    },
                                    "required": ["name","vsys","source"]
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "put": {
                "tags": [
                    "Tunnel Inspection Rules"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Updates tunnel inspection rules params",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\PolicyInterfaces\\TunnelInspectionRuleInterface::updateTunnelInspectionRules",
                "requestBody": {
                    "description": "Tunnel inspection rule params to update",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/updateSchema"
                                }]
                            }
                        }
                    }
                },
                "responses":{
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Tunnel Inspection Rules"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Deletes a tunnel inspection rule",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\PolicyInterfaces\\TunnelInspectionRuleInterface::deleteTunnelInspectionRules",
                "requestBody": {
                    "description": "Tunnel inspection rule id to delete",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/deleteSchema"
                                }]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/policies/tunnelInspection/{limit}": {
            "get": {
                "tags": [
                    "Tunnel Inspection Rules"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    },
                    {
                        "in": "path",
            "name": "limit",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Number of objects to show (can be 'all')"
                    }
                ],
                "description": "Returns all qos rules",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/policies/authentication": {
            "get": {
                "tags": [
                    "Authentication Rules"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    }
                ],
                "description": "Returns all authentication rules",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\PolicyInterfaces\\AuthenticationRuleInterface::getAuthenticationRules",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "post": {
                "tags": [
                    "Authentication Rules"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Insert an authentication rule",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\PolicyInterfaces\\AuthenticationInterface::addAuthenticationRules",
                "requestBody": {
                    "description": "The authentication rules you want to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items":{
                                    "type": "object",
                                    "properties": {
                                        "uuid": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "checkit": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "dummy": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "invalid": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "override": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "source": {
                                            "type": "string",
                                            "example": "config.xml"
                                        },
                                        "vsys": {
                                            "type": "string",
                                            "example": "vsys1"
                                        },
                                        "disabled": {
                                            "type": "boolean"
                                        },
                                        "negate_source": {
                                            "type": "boolean"
                                        },
                                        "negate_destination": {
                                            "type": "boolean"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "log_authentication_timeout": {
                                            "type": "boolean"
                                        },
                                        "timeout": {
                                            "type": "string"
                                        },
                                        "authentication_enforcement": {
                                            "type": "string"
                                        },
                                        "audit_comments": {
                                            "type": "string"
                                        },
                                        "preorpost": {
                                            "type": "integer"
                                        },
                                        "tag": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "zone-from": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "zone-to": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "source-address": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "destination-address": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "service": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "category": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "hip-profile": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "log_forwarding": {
                                            "type": "string"
                                        },
                                        "users": {
                                            "type": "string"
                                        }
                                    },
                                    "required": ["name","vsys","source"]
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "put": {
                "tags": [
                    "Authentication Rules"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Updates authentication rules params",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\PolicyInterfaces\\AuthenticationRuleInterface::updateAuthenticationRules",
                "requestBody": {
                    "description": "Authentication rule params to update",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/updateSchema"
                                }]
                            }
                        }
                    }
                },
                "responses":{
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Authentication Rules"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Deletes a authentication rule",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\PolicyInterfaces\\AuthenticationRuleInterface::deleteAuthenticationRules",
                "requestBody": {
                    "description": "Authentication rule id to delete",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/deleteSchema"
                                }]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/policies/authentication/{limit}": {
            "get": {
                "tags": [
                    "Authentication Rules"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    },
                    {
                        "in": "path",
            "name": "limit",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Number of objects to show (can be 'all')"
                    }
                ],
                "description": "Returns all authentication rules",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/policies/dos": {
            "get": {
                "tags": [
                    "DoS Rules"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    }
                ],
                "description": "Returns all dos rules",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\PolicyInterfaces\\DosRuleInterface::getDoSRules",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "post": {
                "tags": [
                    "DoS Rules"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Insert a dos rule",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\PolicyInterfaces\\DosInterface::addDoSRules",
                "requestBody": {
                    "description": "The dos rules you want to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items":{
                                    "type": "object",
                                    "properties": {
                                        "uuid": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "checkit": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "dummy": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "invalid": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "override": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "source": {
                                            "type": "string",
                                            "example": "config.xml"
                                        },
                                        "vsys": {
                                            "type": "string",
                                            "example": "vsys1"
                                        },
                                        "disabled": {
                                            "type": "boolean"
                                        },
                                        "action": {
                                            "type": "string"
                                        },
                                        "target": {
                                            "type": "string"
                                        },
                                        "target_negate": {
                                            "type": "boolean"
                                        },
                                        "negate_source": {
                                            "type": "boolean"
                                        },
                                        "negate_destination": {
                                            "type": "boolean"
                                        },
                                        "blocked": {
                                            "type": "boolean"
                                        },
                                        "dscp_tos": {
                                            "type": "string"
                                        },
                                        "timeout": {
                                            "type": "string"
                                        },
                                        "codepoints": {
                                            "type": "string"
                                        },
                                        "audit_comments": {
                                            "type": "string"
                                        },
                                        "preorpost": {
                                            "type": "integer"
                                        },
                                        "aggregate": {
                                            "type": "string"
                                        },
                                        "profile": {
                                            "type": "string"
                                        },
                                        "address": {
                                            "type": "string"
                                        },
                                        "tag": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "zone-from": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "zone-to": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "interface-from": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "interface-to": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "source-address": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "destination-address": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "users": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "service": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "schedule": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "log_forwarding": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "required": ["name","vsys","source"]
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "put": {
                "tags": [
                    "DoS Rules"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Updates dos rules params",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\PolicyInterfaces\\DosRuleInterface::updateDoSRules",
                "requestBody": {
                    "description": "Dos rule params to update",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/updateSchema"
                                }]
                            }
                        }
                    }
                },
                "responses":{
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "delete": {
                "tags": [
                    "DoS Rules"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Deletes a dos rule",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\PolicyInterfaces\\DosRuleInterface::deleteDoSRules",
                "requestBody": {
                    "description": "Dos rule id to delete",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/deleteSchema"
                                }]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/policies/dos/{limit}": {
            "get": {
                "tags": [
                    "DoS Rules"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    },
                    {
                        "in": "path",
            "name": "limit",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Number of objects to show (can be 'all')"
                    }
                ],
                "description": "Returns all dos rules",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },

        "/api/v1/{projectId}/objects/serverProfiles/email/{limit}": {
            "get": {
                "tags": [
                    "Email Server Profiles"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    },
                    {
                        "in": "path",
            "name": "limit",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Number of objects to show (can be 'all')"
                    }
                ],
                "description": "Returns all email server profiles",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ServerProfilesInterfaces\\EmailInterface::getEmailProfiles",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/objects/serverProfiles/email": {
            "post": {
                "tags": [
                    "Email Server Profiles"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Insert an email server profile",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ServerProfilesInterfaces\\EmailInterface::addEmailProfiles",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items":{
                                    "type": "object",
                                    "properties": {
                                        "uuid": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "checkit": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "dummy": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "invalid": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "override": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "source": {
                                            "type": "string",
                                            "example": "config.xml"
                                        },
                                        "vsys": {
                                            "type": "string",
                                            "example": "vsys1"
                                        },
                                        "servers": {
                                            "type": "string"
                                        },
                                        "custom": {
                                            "type": "string"
                                        },
                                        "escaping": {
                                            "type": "boolean"
                                        },
                                        "escaped_characters": {
                                            "type": "string"
                                        },
                                        "escaped_character": {
                                            "type": "string",
                                            "maxLength": 1
                                        }
                                    },
                                    "required": ["name","vsys","source","servers"]
                                }
                            },
                            "examples": {
                                "Email Server Profile": {
                                    "value": [{
                                        "name": "emailTest",
                                        "descripion": "",
                                        "servers": "<server>\n             <entry name=\"test\">\n               <display-name>test</display-name>\n               <gateway>1.1.1.1</gateway>\n               <from>some@mail.com</from>\n               <to>some2@mail.com</to>\n             </entry>\n           </server>",
                                        "escaping": 0,
                                        "vsys": "vsys1",
                                        "source": "config.xml"
                                    }]
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "put": {
                "tags": [
                    "Email Server Profiles"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Updates an email server profile params",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ServerProfilesInterfaces\\EmailInterface::updateEmailProfiles",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/updateSchema"
                                }]
                            }
                        }
                    }
                },
                "responses":{
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Email Server Profiles"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Deletes an email server profile",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ServerProfilesInterfaces\\EmailInterface::deleteEmailProfiles",
                "requestBody": {
                    "description": "Email id to delete",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/deleteSchema"
                                }]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },

        "/api/v1/{projectId}/objects/serverProfiles/http/{limit}": {
            "get": {
                "tags": [
                    "Http Server Profiles"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    },
                    {
                        "in": "path",
            "name": "limit",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Number of objects to show (can be 'all')"
                    }
                ],
                "description": "Returns all http server profiles",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/objects/serverProfiles/http": {
            "post": {
                "tags": [
                    "Http Server Profiles"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Insert an http server profile",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ServerProfilesInterfaces\\HttpInterface::addHttpProfiles",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items":{
                                    "type": "object",
                                    "properties": {
                                        "uuid": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "checkit": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "dummy": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "invalid": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "override": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "source": {
                                            "type": "string",
                                            "example": "config.xml"
                                        },
                                        "vsys": {
                                            "type": "string",
                                            "example": "vsys1"
                                        },
                                        "servers": {
                                            "type": "string"
                                        },
                                        "tag_registration": {
                                            "type": "boolean"
                                        },
                                        "payload_format": {
                                            "type": "string"
                                        }
                                    },
                                    "required": ["name","vsys","source","servers"]
                                }
                            },
                            "examples": {
                                "Http Server Profile": {
                                    "value": [{
                                        "name": "httpTest",
                                        "descripion": "",
                                        "servers": "<server>\n             <entry name=\"test\">\n               <address>1.1.11.1</address>\n               <http-method>POST</http-method>\n               <protocol>HTTPS</protocol>\n               <tls-version>1.2</tls-version>\n               <port>443</port>\n               <certificate-profile>None</certificate-profile>\n             </entry>\n           </server>",
                                        "payload_format": "<format>\n             <system>\n               <headers>\n                 <entry name=\"content-type\">\n                   <value>text/xml</value>\n                 </entry>\n               </headers>\n               <name>ServiceNow Incident</name>\n               <url-format>/api/now/table/incident</url-format>\n               <payload>&lt;request&gt;&lt;entry&gt;&lt;short_description&gt;$type, generated at $time_generated &lt;/short_description&gt;\n         &lt;description&gt; domain:$domain, receive_time:$receive_time, serial:$serial, type:$type, subtype:$subtype, config_ver:$config_ver, time_generated:$time_generated, vsys:$vsys, event_id:$eventid, object:$object, format:$fmt, id:$id, module:$module, severity:$severity, opaque:$opaque, seqno:$seqno, actionflags:$actionflags,  dg_hier_level_1:$dg_hier_level_1, dg_hier_level_2:$dg_hier_level_2, dg_hier_level_3:$dg_hier_level_3, dg_hier_level_4:$dg_hier_level_4, vsys_name:$vsys_name, device_name:$device_name&lt;/description&gt;&lt;/entry&gt;&lt;/request&gt;</payload>\n             </system>\n           </format>",
                                        "vsys": "vsys1",
                                        "source": "config.xml"
                                    }]
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "put": {
                "tags": [
                    "Http Server Profiles"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Updates an http server profile params",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ServerProfilesInterfaces\\HttpInterface::updateHttpProfiles",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/updateSchema"
                                }]
                            }
                        }
                    }
                },
                "responses":{
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Http Server Profiles"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Deletes an http server profile",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ServerProfilesInterfaces\\HttpInterface::deleteHttpProfiles",
                "requestBody": {
                    "description": "Email id to delete",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/deleteSchema"
                                }]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },

        "/api/v1/{projectId}/objects/serverProfiles/syslog/{limit}": {
            "get": {
                "tags": [
                    "Syslog Server Profiles"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    },
                    {
                        "in": "path",
            "name": "limit",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Number of objects to show (can be 'all')"
                    }
                ],
                "description": "Returns all syslog server profiles",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ServerProfilesInterfaces\\SyslogInterface::getSyslogProfiles",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/objects/serverProfiles/syslog": {
            "post": {
                "tags": [
                    "Syslog Server Profiles"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Insert an syslog server profile",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ServerProfilesInterfaces\\SyslogInterface::addSyslogProfiles",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items":{
                                    "type": "object",
                                    "properties": {
                                        "uuid": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "checkit": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "dummy": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "invalid": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "override": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "source": {
                                            "type": "string",
                                            "example": "config.xml"
                                        },
                                        "vsys": {
                                            "type": "string",
                                            "example": "vsys1"
                                        },
                                        "servers": {
                                            "type": "string"
                                        },
                                        "custom": {
                                            "type": "string"
                                        },
                                        "escaping": {
                                            "type": "boolean"
                                        },
                                        "escaped_characters": {
                                            "type": "string"
                                        },
                                        "escaped_character": {
                                            "type": "string",
                                            "maxLength": 1
                                        }
                                    },
                                    "required": ["name","vsys","source","servers"]
                                }
                            },
                            "examples": {
                                "Syslog Server Profile": {
                                    "value": [{
                                        "name": "syslogTest",
                                        "descripion": "",
                                        "servers": "<server>\n             <entry name=\"tes\">\n               <transport>UDP</transport>\n               <port>514</port>\n               <format>BSD</format>\n               <server>1.1.1.1</server>\n               <facility>LOG_USER</facility>\n             </entry>\n           </server>",
                                        "escaping": 0,
                                        "vsys": "vsys1",
                                        "source": "config.xml"
                                    }]
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "put": {
                "tags": [
                    "Syslog Server Profiles"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Updates a syslog server profile params",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ServerProfilesInterfaces\\SyslogInterface::updateSyslogProfiles",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/updateSchema"
                                }]
                            }
                        }
                    }
                },
                "responses":{
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Syslog Server Profiles"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Deletes a syslog server profile",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ServerProfilesInterfaces\\SyslogInterface::deleteSyslogProfiles",
                "requestBody": {
                    "description": "Syslog id to delete",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/deleteSchema"
                                }]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },

        "/api/v1/{projectId}/objects/serverProfiles/tacacs/{limit}": {
            "get": {
                "tags": [
                    "Tacacs+ Server Profiles"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    },
                    {
                        "in": "path",
            "name": "limit",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Number of objects to show (can be 'all')"
                    }
                ],
                "description": "Returns all tacacs+ server profiles",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ServerProfilesInterfaces\\TacacsInterface::getTacacsProfiles",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/objects/serverProfiles/tacacs": {
            "post": {
                "tags": [
                    "Tacacs+ Server Profiles"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Insert a tacacs+ server profile",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ServerProfilesInterfaces\\TacacsInterface::addTacacsProfiles",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items":{
                                    "type": "object",
                                    "properties": {
                                        "uuid": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "checkit": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "dummy": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "invalid": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "override": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "source": {
                                            "type": "string",
                                            "example": "config.xml"
                                        },
                                        "vsys": {
                                            "type": "string",
                                            "example": "vsys1"
                                        },
                                        "servers": {
                                            "type": "string"
                                        },
                                        "timeout": {
                                            "type": "integer"
                                        },
                                        "admin_use_only": {
                                            "type": "boolean"
                                        },
                                        "auth_single_connection": {
                                            "type": "boolean"
                                        },
                                        "authentication_protocol": {
                                            "type": "string"
                                        }
                                    },
                                    "required": ["name","vsys","source","servers"]
                                }
                            },
                            "examples": {
                                "Tacacs+ Server Profile": {
                                    "value": [{
                                        "name": "tacacsTest",
                                        "descripion": "",
                                        "servers": "<server>\n             <entry name=\"test\">\n               <secret>-AQ==cMiB1KJphN3OeV9vcYF8nPRIDnk=xOW2B73BBz1xYw/6Cjy0tg==</secret>\n               <port>49</port>\n               <address>1.1.1.1</address>\n             </entry>\n           </server>",
                                        "timeout": 3,
                                        "auth_single_connection": 1,
                                        "authentication_protocol": "CHAP",
                                        "admin_use_only": 0,
                                        "vsys": "vsys1",
                                        "source": "config.xml"
                                    }]
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "put": {
                "tags": [
                    "Tacacs+ Server Profiles"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Updates a tacacs+ server profile params",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ServerProfilesInterfaces\\TacacsInterface::updateTacacsProfiles",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/updateSchema"
                                }]
                            }
                        }
                    }
                },
                "responses":{
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Tacacs+ Server Profiles"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Deletes a tacacs server profile",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ServerProfilesInterfaces\\TacacsInterface::deleteTacacsProfiles",
                "requestBody": {
                    "description": "Tacacs+ id to delete",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/deleteSchema"
                                }]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },

        "/api/v1/{projectId}/objects/kerberos/serverProfiles/{limit}": {
            "get": {
                "tags": [
                    "Kerberos Server Profiles"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    },
                    {
                        "in": "path",
            "name": "limit",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Number of objects to show (can be 'all')"
                    }
                ],
                "description": "Returns all kerberos server profiles",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ServerProfilesInterfaces\\KerberosInterface::getKerberosProfiles",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/objects/serverProfiles/kerberos": {
            "post": {
                "tags": [
                    "Kerberos Server Profiles"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Insert a Kerberos server profile",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ServerProfilesInterfaces\\KerberosInterface::addKerberosProfiles",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items":{
                                    "type": "object",
                                    "properties": {
                                        "uuid": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "checkit": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "dummy": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "invalid": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "override": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "source": {
                                            "type": "string",
                                            "example": "config.xml"
                                        },
                                        "vsys": {
                                            "type": "string",
                                            "example": "vsys1"
                                        },
                                        "servers": {
                                            "type": "string"
                                        },
                                        "admin_use_only": {
                                            "type": "boolean"
                                        }
                                    },
                                    "required": ["name","vsys","source","servers"]
                                }
                            },
                            "examples": {
                                "Kerberos Server Profile": {
                                    "value": [{
                                        "name": "kerberosTest",
                                        "descripion": "",
                                        "servers": "<server>\n             <entry name=\"test\">\n               <host>1.1.1.1</host>\n               <port>88</port>\n             </entry>\n           </server>",
                                        "admin_use_only": 0,
                                        "vsys": "vsys1",
                                        "source": "config.xml"
                                    }]
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "put": {
                "tags": [
                    "Kerberos Server Profiles"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Updates a Kerberos server profile params",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ServerProfilesInterfaces\\KerberosInterface::updateKerberosProfiles",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/updateSchema"
                                }]
                            }
                        }
                    }
                },
                "responses":{
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Kerberos Server Profiles"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Deletes a kerberos server profile",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ServerProfilesInterfaces\\KerberosInterface::deleteKerberosProfiles",
                "requestBody": {
                    "description": "Email id to delete",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/deleteSchema"
                                }]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },

        "/api/v1/{projectId}/objects/serverProfiles/ldap/{limit}": {
            "get": {
                "tags": [
                    "Ldap Server Profiles"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    },
                    {
                        "in": "path",
            "name": "limit",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Number of objects to show (can be 'all')"
                    }
                ],
                "description": "Returns all Ldap server profiles",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ServerProfilesInterfaces\\LdapInterface::getLdapProfiles",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/objects/serverProfiles/ldap": {
            "post": {
                "tags": [
                    "Ldap Server Profiles"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Insert a Ldap server profile",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ServerProfilesInterfaces\\LdapInterface::addLdapProfiles",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items":{
                                    "type": "object",
                                    "properties": {
                                        "uuid": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "checkit": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "dummy": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "invalid": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "override": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "source": {
                                            "type": "string",
                                            "example": "config.xml"
                                        },
                                        "vsys": {
                                            "type": "string",
                                            "example": "vsys1"
                                        },
                                        "servers": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "admin_use_only": {
                                            "type": "boolean"
                                        },
                                        "base_dn": {
                                            "type": "string"
                                        },
                                        "bind_dn": {
                                            "type": "string"
                                        },
                                        "password": {
                                            "type": "string"
                                        },
                                        "bind_timeout": {
                                            "type": "integer",
                                            "default": 30
                                        },
                                        "search_timeout": {
                                            "type": "integer",
                                            "default": 30
                                        },
                                        "retry_interval": {
                                            "type": "integer",
                                            "default": 60
                                        },
                                        "require_secure_connection": {
                                            "type": "boolean",
                                            "default": 1
                                        },
                                        "verify_server_certificate":{
                                            "type": "boolean",
                                            "default": 0
                                        }
                                    },
                                    "required": ["name","vsys","source","servers"]
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "put": {
                "tags": [
                    "Ldap Server Profiles"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Updates a Ldap server profile params",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ServerProfilesInterfaces\\LdapInterface::updateLdapProfiles",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/updateSchema"
                                }]
                            }
                        }
                    }
                },
                "responses":{
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Ldap Server Profiles"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Deletes a Ldap server profile",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ServerProfilesInterfaces\\LdapInterface::deleteLdapProfiles",
                "requestBody": {
                    "description": "Ldap id to delete",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/deleteSchema"
                                }]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },

        "/api/v1/{projectId}/objects/serverProfiles/mfa/{limit}": {
            "get": {
                "tags": [
                    "MFA Server Profiles"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    },
                    {
                        "in": "path",
            "name": "limit",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Number of objects to show (can be 'all')"
                    }
                ],
                "description": "Returns all Mfa server profiles",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ServerProfilesInterfaces\\MfaInterface::getMfaProfiles",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/objects/serverProfiles/mfa": {
            "post": {
                "tags": [
                    "MFA Server Profiles"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Insert a Mfa server profile",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ServerProfilesInterfaces\\MfaInterface::addMfaProfiles",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items":{
                                    "type": "object",
                                    "properties": {
                                        "uuid": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "checkit": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "dummy": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "invalid": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "override": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "source": {
                                            "type": "string",
                                            "example": "config.xml"
                                        },
                                        "vsys": {
                                            "type": "string",
                                            "example": "vsys1"
                                        },
                                        "certificate_profile": {
                                            "type": "string"
                                        },
                                        "mfa_vendor": {
                                            "type": "string"
                                        },
                                        "api_host": {
                                            "type": "string"
                                        },
                                        "base_uri": {
                                            "type": "string"
                                        },
                                        "client_key": {
                                            "type": "string"
                                        },
                                        "access_id": {
                                            "type": "string"
                                        },
                                        "assurance_policy": {
                                            "type": "string"
                                        },
                                        "timeout": {
                                            "type": "string"
                                        },
                                        "integration_key": {
                                            "type": "string"
                                        },
                                        "secret_key": {
                                            "type": "string"
                                        },
                                        "token": {
                                            "type": "string"
                                        },
                                        "organization": {
                                            "type": "string"
                                        },
                                        "base_64_key": {
                                            "type": "string"
                                        },
                                        "pingId_client_organization_id": {
                                            "type": "string"
                                        }
                                    },
                                    "required": ["name","vsys","source","certificate_profile","mfa_vendor"]
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "put": {
                "tags": [
                    "MFA Server Profiles"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Updates a Mfa server profile params",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ServerProfilesInterfaces\\MfaInterface::updateMfaProfiles",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/updateSchema"
                                }]
                            }
                        }
                    }
                },
                "responses":{
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "delete": {
                "tags": [
                    "MFA Server Profiles"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Deletes a Mfa server profile",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ServerProfilesInterfaces\\MfaInterface::deleteMfaProfiles",
                "requestBody": {
                    "description": "Mfa id to delete",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/deleteSchema"
                                }]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },

        "/api/v1/{projectId}/objects/serverProfiles/netflow/{limit}": {
            "get": {
                "tags": [
                    "Netflow Server Profiles"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    },
                    {
                        "in": "path",
            "name": "limit",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Number of objects to show (can be 'all')"
                    }
                ],
                "description": "Returns all Netflow server profiles",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ServerProfilesInterfaces\\NetflowInterface::getNetflowProfiles",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/objects/serverProfiles/netflow": {
            "post": {
                "tags": [
                    "Netflow Server Profiles"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Insert a Netflow server profile",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ServerProfilesInterfaces\\NetflowInterface::addNetflowProfiles",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items":{
                                    "type": "object",
                                    "properties": {
                                        "uuid": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "checkit": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "dummy": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "invalid": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "override": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "source": {
                                            "type": "string",
                                            "example": "config.xml"
                                        },
                                        "vsys": {
                                            "type": "string",
                                            "example": "vsys1"
                                        },
                                        "servers": {
                                            "type": "string"
                                        },
                                        "minutes": {
                                            "type": "integer"
                                        },
                                        "packets": {
                                            "type": "integer"
                                        },
                                        "active_timeout": {
                                            "type": "integer"
                                        },
                                        "panos_field_types": {
                                            "type": "boolean"
                                        }
                                    },
                                    "required": ["name","vsys","source","servers"]
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "put": {
                "tags": [
                    "Netflow Server Profiles"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Updates a Netflow server profile params",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ServerProfilesInterfaces\\NetflowInterface::updateNetflowProfiles",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/updateSchema"
                                }]
                            }
                        }
                    }
                },
                "responses":{
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Netflow Server Profiles"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Deletes a Netflow server profile",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ServerProfilesInterfaces\\NetflowInterface::deleteNetflowProfiles",
                "requestBody": {
                    "description": "Netflow id to delete",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/deleteSchema"
                                }]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },

        "/api/v1/{projectId}/objects/serverProfiles/radius/{limit}": {
            "get": {
                "tags": [
                    "Radius Server Profiles"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    },
                    {
                        "in": "path",
            "name": "limit",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Number of objects to show (can be 'all')"
                    }
                ],
                "description": "Returns all Radius server profiles",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ServerProfilesInterfaces\\RadiusInterface::getRadiusProfiles",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/objects/serverProfiles/radius": {
            "post": {
                "tags": [
                    "Radius Server Profiles"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Insert a Radius server profile",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ServerProfilesInterfaces\\RadiusInterface::addRadiusProfiles",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items":{
                                    "type": "object",
                                    "properties": {
                                        "uuid": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "checkit": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "dummy": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "invalid": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "override": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "source": {
                                            "type": "string",
                                            "example": "config.xml"
                                        },
                                        "vsys": {
                                            "type": "string",
                                            "example": "vsys1"
                                        },
                                        "servers": {
                                            "type": "string"
                                        },
                                        "admin_use_only": {
                                            "type": "boolean"
                                        },
                                        "timeout": {
                                            "type": "integer",
                                            "default": 3
                                        },
                                        "retries": {
                                            "type": "integer"
                                        },
                                        "authentication_protocol": {
                                            "type": "string"
                                        },
                                        "allow_change_pwd": {
                                            "type": "boolean"
                                        },
                                        "aouter_identity_anonymous": {
                                            "type": "boolean"
                                        },
                                        "certificate_profile": {
                                            "type": "string"
                                        }
                                    },
                                    "required": ["name","vsys","source","servers","certificate_profile"]
                                }
                            },
                            "examples": {
                                "Email Server Profile": {
                                    "value": [{
                                        "name": "emailTest",
                                        "descripion": "",
                                        "servers": "<server>\n             <entry name=\"test\">\n               <display-name>test</display-name>\n               <gateway>1.1.1.1</gateway>\n               <from>some@mail.com</from>\n               <to>some2@mail.com</to>\n             </entry>\n           </server>",
                                        "escaping": 0,
                                        "vsys": "vsys1",
                                        "source": "config.xml"
                                    }]
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "put": {
                "tags": [
                    "Radius Server Profiles"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Updates a Radius server profile params",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ServerProfilesInterfaces\\RadiusInterface::updateRadiusProfiles",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/updateSchema"
                                }]
                            }
                        }
                    }
                },
                "responses":{
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Radius Server Profiles"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Deletes a Radius server profile",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ServerProfilesInterfaces\\RadiusInterface::deleteRadiusProfiles",
                "requestBody": {
                    "description": "Radius id to delete",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/deleteSchema"
                                }]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },

        "/api/v1/{projectId}/objects/serverProfiles/saml/{limit}": {
            "get": {
                "tags": [
                    "Saml Server Profiles"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    },
                    {
                        "in": "path",
            "name": "limit",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Number of objects to show (can be 'all')"
                    }
                ],
                "description": "Returns all Saml server profiles",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ServerProfilesInterfaces\\SamlInterface::getSamlProfiles",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/objects/serverProfiles/saml": {
            "post": {
                "tags": [
                    "Saml Server Profiles"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Insert a Saml server profile",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ServerProfilesInterfaces\\SamlInterface::addSamlProfiles",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items":{
                                    "type": "object",
                                    "properties": {
                                        "uuid": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "checkit": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "dummy": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "invalid": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "override": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "source": {
                                            "type": "string",
                                            "example": "config.xml"
                                        },
                                        "vsys": {
                                            "type": "string",
                                            "example": "vsys1"
                                        },
                                        "admin_use_only": {
                                            "type": "boolean"
                                        },
                                        "provider_id": {
                                            "type": "string"
                                        },
                                        "provider_certificate": {
                                            "type": "string"
                                        },
                                        "provider_sso_url": {
                                            "type": "string"
                                        },
                                        "provider_slo_url": {
                                            "type": "string"
                                        },
                                        "sso_request_to_idp": {
                                            "type": "string",
                                            "default": "post"
                                        },
                                        "slo_request_to_idp": {
                                            "type": "string",
                                            "default": "post"
                                        },
                                        "validate_provider_certificate": {
                                            "type": "boolean"
                                        },
                                        "sign_message_to_idp": {
                                            "type": "boolean"
                                        },
                                        "max_clock_skew": {
                                            "type": "integer",
                                            "default": 60
                                        }
                                    },
                                    "required": ["name","vsys","source","provider_id","provider_sso_url","sso_request_to_idp","slo_request_to_idp"]
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "put": {
                "tags": [
                    "Saml Server Profiles"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Updates a Saml server profile params",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ServerProfilesInterfaces\\SamlInterface::updateSamlProfiles",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/updateSchema"
                                }]
                            }
                        }
                    }
                },
                "responses":{
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Saml Server Profiles"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Deletes a Saml server profile",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ServerProfilesInterfaces\\SamlInterface::deleteSamlProfiles",
                "requestBody": {
                    "description": "Saml id to delete",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/deleteSchema"
                                }]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },

        "/api/v1/{projectId}/objects/serverProfiles/snmpTrap/{limit}": {
            "get": {
                "tags": [
                    "SnmpTrap Server Profiles"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "source",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Source id where object is stored"
                    },
                    {
                         "in": "query",
            "name": "vsys",
            "required": false,
            "schema": {
                "type": "integer"
            },
            "description": "Vsys id where object is stored"
                    },
                    {
                          "in": "query",
            "name": "name",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Name of the object"
                    },
                    {
                        "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                    },
                    {
                        "in": "path",
            "name": "limit",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Number of objects to show (can be 'all')"
                    }
                ],
                "description": "Returns all SnmpTrap server profiles",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ServerProfilesInterfaces\\SnmpTrapInterface::getSnmpTrapProfiles",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/objects/serverProfiles/smnpTrap": {
            "post": {
                "tags": [
                    "SnmpTrap Server Profiles"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Insert a SnmpTrap server profile",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ServerProfilesInterfaces\\SnmpTrapInterface::addSnmpTrapProfiles",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items":{
                                    "type": "object",
                                    "properties": {
                                        "uuid": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "checkit": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "dummy": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "invalid": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "override": {
                                            "type": "integer",
                                            "enum": [0,1],
                                            "default": 0
                                        },
                                        "source": {
                                            "type": "string",
                                            "example": "config.xml"
                                        },
                                        "vsys": {
                                            "type": "string",
                                            "example": "vsys1"
                                        },
                                        "servers": {
                                            "type": "string"
                                        },
                                        "version": {
                                            "type": "string",
                                            "maxLength": 5
                                        }
                                    },
                                    "required": ["name","vsys","source","servers","version"]
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "put": {
                "tags": [
                    "SnmpTrap Server Profiles"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Updates a SnmpTrap server profile params",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ServerProfilesInterfaces\\SnmpTrapInterface::updateSnmpTrapProfiles",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/updateSchema"
                                }]
                            }
                        }
                    }
                },
                "responses":{
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "delete": {
                "tags": [
                    "SnmpTrap Server Profiles"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Deletes an email server profile",
                "operationId": "App\\Http\\Controllers\\v1\\PANObjectInterfaces\\ServerProfilesInterfaces\\SnmpTrapInterface::deleteSnmpTrapProfiles",
                "requestBody": {
                    "description": "SnmpTrap id to delete",
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [{
                                    "$ref": "#/components/schemas/deleteSchema"
                                }]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },


        "/api/v1/{projectId}/tools/rename": {
            "post": {
                "tags": [
                    "Tools"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Rename objects",
                "operationId": "App\\Http\\Controllers\\v1\\Handlers\\PANObjectsHandler::rename",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "expedition-ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }

                                    },
                                    "new_name": {
                                        "type": "string"
                                    }
                                },
                                "required": ["type", "expedition-ids", "new_name"]
                            },
                            "examples": {
                                "RENAME ADDRESS1": {
                                    "value": {
                                        "new_name": "address123",
                                        "expedition-ids": [1040],
                                        "type": "address"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/tools/addPrefix": {
            "post": {
                "tags": [
                    "Tools"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Rename objects",
                "operationId": "App\\Http\\Controllers\\v1\\Handlers\\PANObjectsHandler::addPrefix",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "expedition-ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }

                                    },
                                    "prefix": {
                                        "type": "string"
                                    }
                                },
                                "required": ["type", "expedition-ids", "prefix"]
                            },
                            "examples": {
                                "ADD ADDRESS PREFIX": {
                                    "value": {
                                        "prefix": "gr1-",
                                        "expedition-ids": [1040],
                                        "type": "address"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/tools/addSuffix": {
            "post": {
                "tags": [
                    "Tools"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Rename objects",
                "operationId": "App\\Http\\Controllers\\v1\\Handlers\\PANObjectsHandler::addSuffix",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "expedition-ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }

                                    },
                                    "suffix": {
                                        "type": "string"
                                    }
                                },
                                "required": ["type", "expedition-ids", "suffix"]
                            },
                            "examples": {
                                "ADD ADDRESS SUFFIX": {
                                    "value": {
                                        "suffix": "_1",
                                        "expedition-ids": [1040],
                                        "type": "address"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/{projectId}/tools/merge": {
            "post": {
                "tags": [
                    "Tools"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "description": "Rename objects",
                "operationId": "App\\Http\\Controllers\\v1\\Handlers\\MergeConfigs\\MergeConfigs::merge",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "origin_source": {
                                        "type": "string"
                                    },
                                    "destination_source": {
                                        "type": "string"
                                    },
                                    "params": {
                                        "oneOf": [
                                            {
                                                "type": "object",
                                                "properties":{
                                                    "types": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "origin_vsys": {
                                                        "type": "string"
                                                    },
                                                    "destination_vsys": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            {
                                                "type": "object",
                                                "properties":{
                                                    "types": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "origin_vsys": {
                                                        "type": "integer"
                                                    },
                                                    "destination_vsys": {
                                                        "type": "integer"
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                },
                                "required": ["origin_source", "destination_source", "params"]
                            },
                            "examples": {
                                "Merge vsyses": {
                                    "value": [{
                                        "origin_source": "configuration1.xml",
                                        "destination_source": "baseConfig.xml",
                                        "params": [
                                            {
                                                "types": [
                                                    "address",
                                                    "addresGroups"
                                                ],
                                                "origin_vsys": "vsys1",
                                                "destination_vsys": "vsys1"
                                            },
                                            {
                                                "types": [
                                                    "service",
                                                    "service-group"
                                                ],
                                                "origin_vsys": 3077,
                                                "destination_template": 3065
                                            }
                                        ]
                                    }]
                                },
                                "Merge device-groups": {
                                    "value": [{
                                        "origin_source": 3009,
                                        "destination_source": 3088,
                                        "params": [
                                            {
                                                "types": [
                                                    "address",
                                                    "address-group"
                                                ],
                                                "origin_vsys": "vsys1",
                                                "destination_deviceGroup": "dg_1"
                                            },
                                            {
                                                "types": [
                                                    "service",
                                                    "service-group"
                                                ],
                                                "origin_deviceGroup": 3077,
                                                "destination_deviceGroup": 3300
                                            }
                                        ]
                                    }]
                                },
                                "Merge template": {
                                    "value": [{
                                        "origin_source": 3009,
                                        "destination_source": 3088,
                                        "params": [
                                            {
                                                "types": [
                                                    "interface",
                                                    "virtual-router"
                                                ],
                                                "origin_vsys": "vsys1",
                                                "destination_template": "template1"
                                            },
                                            {
                                                "types": [
                                                    "virtual-wire",
                                                    "ike-crypto-profile"
                                                ],
                                                "origin_template": 3077,
                                                "destination_templateStack": 3310
                                            }
                                        ]
                                    }]
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },

        "/api/v1/devices": {
            "get": {
                "tags": [
                    "Devices"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                         "in": "query",
            "name": "serial",
            "required": false,
            "schema": {
                "type": "string"
            },
            "description": "Device serial"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "post": {
                "tags": [
                    "Devices"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "serial": {
                                        "type": "string"
                                    },
                                    "serialHA": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "port": {
                                        "type": "integer"
                                    },
                                    "hostname": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    },
                                    "device_name": {
                                        "type": "string"
                                    }
                                },
                                "required": ["serial","device_name","hostname","type"]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "put": {
                "tags": [
                    "Devices"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "integer"
                                    },
                                    "serial": {
                                        "type": "string"
                                    },
                                    "serialHA": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "port": {
                                        "type": "integer"
                                    },
                                    "hostname": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    },
                                    "device_name": {
                                        "type": "string"
                                    }
                                },
                                "required": ["id"]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Devices"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "integer"
                                    }
                                },
                                "required": ["id"]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/device/keys": {
            "post": {
                "tags": [
                    "Devices"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "integer"
                                    },
                                    "role": {
                                        "type": "string",
                                        "enum": ["user","viewer","admin","all","personal"]
                                    },
                                    "username": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    },
                                    "api_key": {
                                        "type": "string"
                                    }
                                },
                                "required": ["id","role"]
                            },
                            "examples": {
                                "ASK DEVICE KEYS": {
                                    "value": {
                                        "id": 31,
                                        "role": "all",
                                        "username": "admin",
                                        "password": "paloalto"
                                    }
                                },
                                "ADD EXISTING KEYS": {
                                    "value": {
                                        "id": 31,
                                        "role": "personal",
                                        "api_key": "LUFRPT15RE5zbGVFeUd0MCtVS1hNY=="
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Devices"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "serial": {
                                        "type": "string"
                                    },
                                    "role": {
                                        "type": "string",
                                        "description": "Must be user,admin,viewer"
                                    }
                                },
                                "required": ["serial"]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/device/{deviceId}/retrieveContent/{config}": {
            "get": {
                "tags": [
                    "Devices"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "deviceId",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Id of the device"
                    },
                    {
                        "in": "path",
                        "name": "config",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": ["running", "candidate"]
                        },
                        "description": "Config to retrieve content"
                    }
                ],
                "description": "Returns the Id of the job downloading the content",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/device/{deviceId}/content": {
            "get": {
                "tags": [
                    "Devices"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "deviceId",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Id of the device"
                    }
                ],
                "description": "Returns the content of a device that has been downloaded",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/projects/{projectId}/device/push": {
            "post": {
                "tags": [
                    "Devices"
                ],
                "description": "Pushes tha api calls from a project to a device associated to it",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters":  [
                    {
                        "in": "path",
                        "name": "projectId",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Id from the project to generate the api calls"

                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "serial": {
                                        "type": "string"
                                    },
                                    "source": {
                                        "type": "integer"
                                    }
                                },
                                "required": ["serial","source"]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },

        "/api/v1/folders": {
            "post":     {
                "tags": [
                    "Folders"
                ],
                "description": "Creates new folder",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "parentId": {
                                        "type": "integer"
                                    }
                                },
                                "required": ["type","name","parentId"]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Folders"
                ],
                "description": "Creates new folder",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "integer"
                                    }
                                },
                                "required": ["id"]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "put": {
                "tags": [
                    "Folders"
                ],
                "description": "Renames folder",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "id": {
                                        "type": "integer"
                                    },
                                    "description": {
                                        "type": "string"
                                    }
                                },
                                "required": ["id"]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },

        "/api/v1/folders/structure/{type}": {
            "get": {
                "tags": [
                    "Folders"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "type",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },

        "/api/v1/job/status": {
            "get": {
                "tags": [
                    "Jobs"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "Returns the information of the jobs ",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/job/status/{jobId}": {
            "get": {
                "tags": [
                    "Jobs"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "jobId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Job id to get info, it can be all"
                    }
                ],
                "description": "Returns the information of the job asked",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },
        "/api/v1/job/status/{jobId}/{mode}": {
            "get": {
                "tags": [
                    "Jobs"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "jobId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Job id to get info, it can be all"
                    },
                    {
                        "in": "path",
                        "name": "mode",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": ["","complete","summary","allSummary","all","completeSummary","complete","cancelledSummary","cancelled","pendingSummary","pending"]
                        },
                        "description": "Type of information to get"
                    }
                ],
                "description": "Returns the information of the job asked",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },


        "/api/v1/projects/{projectId}/apiCalls/{type}": {
            "post": {
                "tags": [
                    "Api Calls"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters":  [
                    {
                        "in": "path",
                        "name": "type",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": ["atomic","subatomic"]
                        },
                        "description": "Type of api call: atomic => one api call for each object type (address/services...), subatomic => one api call for each object (address1, address1, service1...)"
                    },
                    {
                        "in": "path",
                        "name": "projectId",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Id from the project to generate the api calls"

                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "serial": {
                                        "type": "string"
                                    },
                                    "role": {
                                        "type": "string",
                                        "enum": ["all","admin","user","viewer"],
                                        "description": "Must be user,admin,viewer,all"
                                    },
                                    "auth_type": {
                                        "type": "string",
                                        "enum": ["UserPassword","ApiKey"],
                                        "description": "Must be UserPassword,ApiKey"
                                    },
                                    "username": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    },
                                    "sourceId": {
                                        "type": "integer"
                                    },
                                    "action": {
                                        "type": "string",
                                        "enum": ["set","edit"]
                                    }
                                },
                                "required": ["serial","role","auth_type","sourceId"]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },

        "/api/v1/projects/{projectId}/apiCalls": {
            "get": {
                "tags": [
                    "Api Calls"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "projectId",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Id of the project you want to see the api calls"
                    }
                ],
                "description": "Returns the information of api calls assigned to the project",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },

        "/api/v1/{projectId}/tools/filters/{filterId}": {
            "get": {
                "tags": [
                    "Filters"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "projectId",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Id from the project."
                    },
                    {
                        "in": "path",
                        "name": "filterId",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Id from the filter to show."
                    }
                ],
                "description": "Returns filters",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        },

        "/api/v1/{projectId}/tools/filters": {
            "get": {
                "tags": [
                    "Filters"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "projectId",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Id from the project."
                    }
                ],
                "description": "Returns filters",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },

            "post": {
                    "tags": [
                        "Filters"
                    ],
                    "security": [
                        {
                            "bearerAuth": []
                        }
                    ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                    "requestBody": {
                        "required": true,
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "filter": {
                                            "type": "string"
                                        },
                                        "is_single_filter": {
                                            "type": "boolean"
                                        }
                                    },
                                    "required": ["name","filter","is_single_filter"]
                                }
                            }
                        }
                    },
                    "responses": {
                        "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                    }
                },
            "put": {
                "tags": [
                    "Filters"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "filter": {
                                        "type": "string"
                                    },
                                    "is_single_filter": {
                                        "type": "integer"
                                    }
                                },
                                "required": ["id"]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Filters"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [{
                    "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
                "type": "string"
            },
            "description": "Name of the project"
                }],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "id": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "required": ["id"]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/responseOK"
                    }
                }
            }
        }


    },


    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        },
        "schemas": {
            "updateSchema": {
                "properties": {
                    "expedition-id": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "params": {
                        "type": "object",
                        "properties":{
                            "add":{
                                "type":"object",
                                "properties":{
                                    "members":{
                                        "type":"string"
                                    }
                                }
                            },
                            "delete":{
                                "type":"object",
                                "properties":{
                                    "members":{
                                        "type":"string"
                                    }
                                }
                            }
                        },
                        "additionalProperties": {
                            "type": "string"
                        }

                    }
                },
                "type": "object",
                "required": ["expedition-id","params"]
            },
            "deleteSchema": {
                "properties": {
                    "expedition-id": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "type": "object",
                "required": ["expedition-id"]
            }
        },

        "responses": {
            "responseOK": {
                "description": "Response successful",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "contentsFormat":{
                                    "type": "string"
                                },
                                "contents": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer"
                                        },
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "cacheable": {
                                            "type": "boolean"
                                        },
                                        "metadata": {
                                            "type": "object",
                                            "properties": {
                                                "execution-info": {
                                                    "type": "object",
                                                    "properties": {
                                                        "execution-time": {
                                                            "type": "number"
                                                        },
                                                        "execution-memory": {
                                                            "type": "number"
                                                        },
                                                        "execution-disk-consumption": {
                                                            "type": "number"
                                                        }
                                                    }
                                                },
                                                "request-info": {
                                                    "type": "object",
                                                    "properties": {
                                                        "request-method": {
                                                            "type": "string"
                                                        },
                                                        "request-query": {
                                                            "type": "string"
                                                        },
                                                        "request-time": {
                                                            "type": "string"
                                                        },
                                                        "request-client-user": {
                                                            "type": "string"
                                                        },
                                                        "request-client-ip": {
                                                            "type": "string"
                                                        },
                                                        "request-client-agent": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "response": {
                                            "type": "object",
                                            "properties": {
                                                "total": {
                                                    "type": "integer"
                                                },
                                                "current-page": {
                                                    "type": "integer"
                                                },
                                                "per-page": {
                                                    "type": "integer"
                                                },
                                                "total-pages": {
                                                    "type": "integer"
                                                },
                                                "state": {
                                                    "type": "integer"
                                                },
                                                "jobid": {
                                                    "type": "integer"
                                                },
                                                "response-messages": {
                                                    "type": "object",
                                                    "properties": {
                                                        "total": {
                                                            "type": "integer"
                                                        },
                                                        "code": {
                                                            "type": "integer"
                                                        },
                                                        "messages": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "message": {
                                                                        "type": "string"
                                                                    },
                                                                    "details": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "type": {
                                                                                "type": "string"
                                                                            },
                                                                            "causes": {
                                                                                "type": "object",
                                                                                "properties":{
                                                                                    "module": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "code": {
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "description": {
                                                                                        "type": "string"
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "data": {
                                                    "type": "object",
                                                    "properties": {
                                                        "fields": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "allowBlank": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "defaultValue": {
                                                                        "type": "string"
                                                                    },
                                                                    "name": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": {
                                                                        "type": "string"
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "columns": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "dataIndex": {
                                                                        "type": "string"
                                                                    },
                                                                    "header": {
                                                                        "type": "string"
                                                                    },
                                                                    "lockable": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "locked": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "mapping": {
                                                                        "type": "string"
                                                                    },
                                                                    "renderer": {
                                                                        "type": "string"
                                                                    },
                                                                    "sortable": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "width": {
                                                                        "type": "integer"
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "content": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "object"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
